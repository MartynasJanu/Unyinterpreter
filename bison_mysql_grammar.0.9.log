
Warning: Module 'xdebug' already loaded in Unknown on line 0
Array
(
    [query] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => END_OF_INPUT
                                            [action] => 
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => verb_clause
                                            [action] => 
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => ';'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_end_of_input
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => verb_clause
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => END_OF_INPUT
                                            [action] => 
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          
                                        )

                                )

                        )

                )

        )

    [opt_end_of_input] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => END_OF_INPUT
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [verb_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => statement
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => begin
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [statement] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => analyze
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => binlog_base64_event
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => call
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => change
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => check
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => checksum
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => commit
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => deallocate
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => delete_stmt
                                            [action] =>   MAKE_CMD($1); 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => describe
                                            [action] => 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => do_stmt
                                            [action] =>  CONTEXTUALIZE($1); 
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => drop
                                            [action] => 
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => execute
                                            [action] => 
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => flush
                                            [action] => 
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => get_diagnostics
                                            [action] => 
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => group_replication
                                            [action] => 
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant
                                            [action] => 
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => handler
                                            [action] => 
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => help
                                            [action] => 
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => insert_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => install
                                            [action] => 
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => kill
                                            [action] => 
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => load
                                            [action] => 
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => lock
                                            [action] => 
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => optimize
                                            [action] => 
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keycache
                                            [action] => 
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => parse_gcol_expr
                                            [action] => 
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => partition_entry
                                            [action] => 
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => preload
                                            [action] => 
                                        )

                                )

                        )

                    [31] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => prepare
                                            [action] => 
                                        )

                                )

                        )

                    [32] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => purge
                                            [action] => 
                                        )

                                )

                        )

                    [33] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => release
                                            [action] => 
                                        )

                                )

                        )

                    [34] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => rename
                                            [action] => 
                                        )

                                )

                        )

                    [35] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => repair
                                            [action] => 
                                        )

                                )

                        )

                    [36] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => replace_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [37] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => reset
                                            [action] => 
                                        )

                                )

                        )

                    [38] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => resignal_stmt
                                            [action] => 
                                        )

                                )

                        )

                    [39] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => revoke
                                            [action] => 
                                        )

                                )

                        )

                    [40] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => rollback
                                            [action] => 
                                        )

                                )

                        )

                    [41] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => savepoint
                                            [action] => 
                                        )

                                )

                        )

                    [42] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select
                                            [action] =>  CONTEXTUALIZE($1); 
                                        )

                                )

                        )

                    [43] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => set
                                            [action] =>  CONTEXTUALIZE($1); 
                                        )

                                )

                        )

                    [44] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signal_stmt
                                            [action] => 
                                        )

                                )

                        )

                    [45] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => show
                                            [action] => 
                                        )

                                )

                        )

                    [46] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => shutdown_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [47] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave
                                            [action] => 
                                        )

                                )

                        )

                    [48] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => start
                                            [action] => 
                                        )

                                )

                        )

                    [49] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => truncate
                                            [action] => 
                                        )

                                )

                        )

                    [50] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => uninstall
                                            [action] => 
                                        )

                                )

                        )

                    [51] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => unlock
                                            [action] => 
                                        )

                                )

                        )

                    [52] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => update_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [53] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => use
                                            [action] => 
                                        )

                                )

                        )

                    [54] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => xa
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [deallocate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => deallocate_or_drop
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PREPARE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring($3);
          
                                        )

                                )

                        )

                )

        )

    [deallocate_or_drop] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEALLOCATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [prepare] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PREPARE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => prepare_src
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring($2);
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                )

        )

    [prepare_src] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= $1;
            lex->prepared_stmt_code_is_varref= FALSE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= $2;
            lex->prepared_stmt_code_is_varref= TRUE;
          
                                        )

                                )

                        )

                )

        )

    [execute] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXECUTE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring($2);
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => execute_using
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [execute_using] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => execute_var_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [execute_var_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => execute_var_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => execute_var_ident
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => execute_var_ident
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [execute_var_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&$2, sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [help] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HELP_SYM
                                            [action] => 
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= $3.str;
          
                                        )

                                )

                        )

                )

        )

    [change] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANGE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => MASTER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => master_defs
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANGE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => REPLICATION
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FILTER_SYM
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => filter_defs
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [filter_defs] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_def
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_defs
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => filter_def
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [filter_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_DO_DB
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_db_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_DO_DB);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_IGNORE_DB
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_db_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_IGNORE_DB);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_DO_TABLE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_table_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_DO_TABLE);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_IGNORE_TABLE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_table_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_IGNORE_TABLE);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_WILD_DO_TABLE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_string_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_WILD_DO_TABLE);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_WILD_IGNORE_TABLE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_string_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3,
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_REWRITE_DB
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_filter_db_pair_list
                                            [action] => 
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value($3, OPT_REPLICATE_REWRITE_DB);
          
                                        )

                                )

                        )

                )

        )

    [opt_filter_db_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => filter_db_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [filter_db_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_db_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [filter_db_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string($1.str,
                                                           $1.length,
                                                           thd->charset());
            $$= db_item;
          
                                        )

                                )

                        )

                )

        )

    [opt_filter_db_pair_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => filter_db_pair_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [filter_db_pair_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->push_back($2);
            $$->push_back($4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_db_pair_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => filter_db_ident
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $1->push_back($4);
            $1->push_back($6);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [opt_filter_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => filter_table_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [filter_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_table_ident
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_table_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => filter_table_ident
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [filter_table_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string($1.str,
                                                              $1.length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append($3.str, $3.length);
            $$= table_item;
          
                                        )

                                )

                        )

                )

        )

    [opt_filter_string_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => filter_string_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [filter_string_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_string
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_string_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => filter_string
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [filter_string] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => filter_wild_db_table_string
                                            [action] => 
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string($1.str,
                                                               $1.length,
                                                               thd->charset());
            $$= string_item;
          
                                        )

                                )

                        )

                )

        )

    [master_defs] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_def
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_defs
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => master_def
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [master_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_HOST_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.host = $3.str;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_BIND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.bind_addr = $3.str;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_USER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.user = $3.str;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_PASSWORD_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.password = $3.str;
            if (strlen($3.str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_PORT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.port = $3;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_CONNECT_RETRY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.connect_retry = $3;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_RETRY_COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.retry_count= $3;
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_DELAY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            if ($3 > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake(@3.cpp.start, @3.cpp.end - @3.cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = $3;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.ssl= $3 ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_ca= $3.str;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CAPATH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_capath= $3.str;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_cert= $3.str;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CIPHER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_cipher= $3.str;
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_KEY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_key= $3.str;
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_VERIFY_SERVER_CERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.ssl_verify_server_cert= $3 ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CRL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_crl= $3.str;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CRLPATH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.ssl_crlpath= $3.str;
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_HEARTBEAT_PERIOD_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => NUM_literal
                                            [action] => 
            ITEMIZE($3, &$3);

            Lex->mi.heartbeat_period= (float) $3->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SERVER_IDS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ignore_server_id_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_AUTO_POSITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.auto_position= $3 ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_file_def
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ignore_server_id_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ignore_server_id
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ignore_server_id_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ignore_server_id
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ignore_server_id] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.repl_ignore_server_ids.push_back($1);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => master_file_def:
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => MASTER_LOG_FILE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.log_file_name = $3.str;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_LOG_POS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulonglong_num
                                            [action] => 
            Lex->mi.pos = $3;
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_LOG_FILE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            Lex->mi.relay_log_name = $3.str;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_LOG_POS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->mi.relay_log_pos = $3;
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          
                                        )

                                )

                        )

                )

        )

    [opt_channel] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHANNEL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, $3.str);
         Lex->mi.channel= $3.str;
         Lex->mi.for_channel= true;
       
                                        )

                                )

                        )

                )

        )

    [create] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_table_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_if_not_exists
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, $5, NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=$2 | $4;
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          
                                        )

                                    [5] => Array
                                        (
                                            [id] => create2
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  $5->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_unique
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => key_alg
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            if (add_create_index_prepare(Lex, $7))
              MYSQL_YYABORT;
          
                                        )

                                    [7] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => normal_key_options
                                            [action] => 
            if (add_create_index(Lex, $2, $4))
              MYSQL_YYABORT;
          
                                        )

                                    [11] => Array
                                        (
                                            [id] => opt_index_lock_algorithm
                                            [action] =>  
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => fulltext
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            if (add_create_index_prepare(Lex, $7))
              MYSQL_YYABORT;
          
                                        )

                                    [7] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => fulltext_key_options
                                            [action] => 
            if (add_create_index(Lex, $2, $4))
              MYSQL_YYABORT;
          
                                        )

                                    [11] => Array
                                        (
                                            [id] => opt_index_lock_algorithm
                                            [action] =>  
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => spatial
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            if (add_create_index_prepare(Lex, $7))
              MYSQL_YYABORT;
          
                                        )

                                    [7] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => spatial_key_options
                                            [action] => 
            if (add_create_index(Lex, $2, $4))
              MYSQL_YYABORT;
          
                                        )

                                    [11] => Array
                                        (
                                            [id] => opt_index_lock_algorithm
                                            [action] =>  
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_if_not_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_create_database_options
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= $4;
            lex->create_info.options=$3;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => view_or_trigger_or_sp_or_event
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_if_not_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => require_clause
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => connect_options
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_options
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->create_info.options=$3;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGFILE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => logfile_group_info
                                            [action] => 
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => tablespace_info
                                            [action] => 
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SERVER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FOREIGN
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => WRAPPER_SYM
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => OPTIONS_SYM
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => server_options_list
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            Lex->server_options.m_server_name= $3;
            Lex->server_options.set_scheme($7);
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          
                                        )

                                )

                        )

                )

        )

    [server_options_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => server_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => server_options_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => server_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [server_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_username($2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOST_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_host($2);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_db($2);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OWNER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_owner($2);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_password($2);
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SOCKET_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->server_options.set_socket($2);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PORT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->server_options.set_port($2);
          
                                        )

                                )

                        )

                )

        )

    [event_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_if_not_exists
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= @1.cpp.start;
            lex->create_info.options= $2;
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= $3;
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => SCHEDULE_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ev_schedule_time
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_ev_on_completion
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_ev_status
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_ev_comment
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => DO_SYM
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => ev_sql_stmt
                                            [action] => 
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          
                                        )

                                )

                        )

                )

        )

    [ev_schedule_time] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVERY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => interval
                                            [action] => 
            ITEMIZE($2, &$2);

            Lex->event_parse_data->item_expression= $2;
            Lex->event_parse_data->interval= $3;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => ev_starts
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ev_ends
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($2, &$2);

            Lex->event_parse_data->item_execute_at= $2;
          
                                        )

                                )

                        )

                )

        )

    [opt_ev_status] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENABLE_SYM
                                            [action] => 
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            $$= 1;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISABLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            $$= 1;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISABLE_SYM
                                            [action] => 
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            $$= 1;
          
                                        )

                                )

                        )

                )

        )

    [ev_starts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STARTS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($2, &$2);

            Lex->event_parse_data->item_starts= $2;
          
                                        )

                                )

                        )

                )

        )

    [ev_ends] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENDS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($2, &$2);

            Lex->event_parse_data->item_ends= $2;
          
                                        )

                                )

                        )

                )

        )

    [opt_ev_on_completion] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ev_on_completion
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ev_on_completion] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COMPLETION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => PRESERVE_SYM
                                            [action] => 
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            $$= 1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COMPLETION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => NOT_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => PRESERVE_SYM
                                            [action] => 
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            $$= 1;
          
                                        )

                                )

                        )

                )

        )

    [opt_ev_comment] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->comment= Lex->event_parse_data->comment= $2;
            $$= 1;
          
                                        )

                                )

                        )

                )

        )

    [ev_sql_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, @0.cpp.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => ev_sql_stmt_inner
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          
                                        )

                                )

                        )

                )

        )

    [ev_sql_stmt_inner] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_statement
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_return
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_if
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => case_stmt_specification
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_labeled_block
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_unlabeled_block
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_labeled_control
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_unlabeled
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_leave
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_iterate
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_open
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_fetch
                                            [action] => 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_close
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [clear_privileges] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => clear_password_expire_options
                                            [action] => 
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         
                                        )

                                )

                        )

                )

        )

    [clear_password_expire_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         
                                        )

                                )

                        )

                )

        )

    [sp_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            if (!$1.str ||
                (check_and_convert_db_name(&$1, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&$3))
            {
              MYSQL_YYABORT;
            }
            $$= new sp_name(to_lex_cstring($1), $3, true);
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->init_qname(YYTHD);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&$1))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            $$= new sp_name(to_lex_cstring(db), $1, false);
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->init_qname(thd);
          
                                        )

                                )

                        )

                )

        )

    [sp_a_chistics] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_a_chistics
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_chistic
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_c_chistics] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_c_chistics
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_c_chistic
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_chistic] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->sp_chistics.comment= $2; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LANGUAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] =>  /* Just parse it, we only have one language for now. */ 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] =>  Lex->sp_chistics.daccess= SP_NO_SQL; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTAINS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] =>  Lex->sp_chistics.daccess= SP_CONTAINS_SQL; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] =>  Lex->sp_chistics.daccess= SP_READS_SQL_DATA; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MODIFIES_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] =>  Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_suid
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_c_chistic] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_chistic
                                            [action] =>  
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DETERMINISTIC_SYM
                                            [action] =>  Lex->sp_chistics.detistic= TRUE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DETERMINISTIC_SYM
                                            [action] =>  Lex->sp_chistics.detistic= FALSE; 
                                        )

                                )

                        )

                )

        )

    [sp_suid] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SECURITY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFINER_SYM
                                            [action] => 
            Lex->sp_chistics.suid= SP_IS_SUID;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SECURITY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INVOKER_SYM
                                            [action] => 
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          
                                        )

                                )

                        )

                )

        )

    [call] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CALL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= $2;
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, $2, SP_TYPE_PROCEDURE);
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_sp_cparam_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_sp_cparam_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_sp_cparams
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_sp_cparams] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_cparams
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_cparams] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_cparams
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($3, &$3);

           Lex->call_value_list.push_back($3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($1, &$1);

            Lex->call_value_list.push_back($1);
          
                                        )

                                )

                        )

                )

        )

    [sp_fdparam_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_fdparams
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_fdparams] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_fdparams
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_fdparam
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_fdparam
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_init_param] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          
                                        )

                                )

                        )

                )

        )

    [sp_fdparam] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_init_param
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => type_with_opt_collate
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable($1, TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   $1,
                                                   (enum enum_field_types) $3,
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) $3,
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          
                                        )

                                )

                        )

                )

        )

    [sp_pdparam_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_pdparams
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_pdparams] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_pdparams
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_pdparam
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_pdparam
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_pdparam] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_opt_inout
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_init_param
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => type_with_opt_collate
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable($3, TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   $3,
                                                   (enum enum_field_types) $4,
                                                   (sp_variable::enum_mode) $1);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) $4,
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          
                                        )

                                )

                        )

                )

        )

    [sp_opt_inout] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= sp_variable::MODE_IN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] =>  $$= sp_variable::MODE_IN; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OUT_SYM
                                            [action] =>  $$= sp_variable::MODE_OUT; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INOUT_SYM
                                            [action] =>  $$= sp_variable::MODE_INOUT; 
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmts
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ';'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmts1] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ';'
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ';'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_decls] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.vars= $$.conds= $$.hndlrs= $$.curs= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_decls
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_decl
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ';'
                                            [action] => 
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (($2.vars || $2.conds) && ($1.curs || $1.hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ($2.curs && $1.hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            $$.vars= $1.vars + $2.vars;
            $$.conds= $1.conds + $2.conds;
            $$.hndlrs= $1.hndlrs + $2.hndlrs;
            $$.curs= $1.curs + $2.curs;
          
                                        )

                                )

                        )

                )

        )

    [sp_decl] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECLARE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_decl_idents
                                            [action] =>                      /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary($2);
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => type_with_opt_collate
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_opt_default
                                            [action] =>                      /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) $4;
            Item *dflt_value_item= $5;
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              @5.raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-$2 ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            $$.vars= $2;
            $$.conds= $$.hndlrs= $$.curs= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECLARE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CONDITION_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => sp_cond
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition($2, TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), $2.str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, $2, $5))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            $$.vars= $$.hndlrs= $$.curs= 0;
            $$.conds= 1;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECLARE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_handler_type
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => HANDLER_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) $2);

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ($2 == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => sp_hcond_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ($2 == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            $$.vars= $$.conds= $$.curs= 0;
            $$.hndlrs= 1;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECLARE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CURSOR_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] =>              /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(@4.raw.end);
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => select
                                            [action] =>              /*$7*/
            CONTEXTUALIZE($6);

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor($2, &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), $2.str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            @6.raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor($2))
            {
              MYSQL_YYABORT;
            }

            $$.vars= $$.conds= $$.hndlrs= 0;
            $$.curs= 1;
          
                                        )

                                )

                        )

                )

        )

    [sp_handler_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXIT_SYM
                                            [action] =>  $$= sp_handler::EXIT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTINUE_SYM
                                            [action] =>  $$= sp_handler::CONTINUE; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDO_SYM
                                            [action] =>  QQ No yet 
                                        )

                                    [1] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_hcond_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_hcond_element
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_hcond_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_hcond_element
                                            [action] =>  $$+= 1; 
                                        )

                                )

                        )

                )

        )

    [sp_hcond_element] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_hcond
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler($1))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition($1);
            }
          
                                        )

                                )

                        )

                )

        )

    [sp_cond] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ulong_num
                                            [action] =>  /* mysql errno */
            if ($1 == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            $$= new (YYTHD->mem_root) sp_condition_value($1);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sqlstate
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sqlstate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQLSTATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_value
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_literal
                                            [action] =>  /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&$3) || is_sqlstate_completion($3.str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
            $$= new (YYTHD->mem_root) sp_condition_value($3.str);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_value] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUE_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_hcond] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_cond
                                            [action] => 
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            $$= pctx->find_condition($1, false);

            if ($$ == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQLWARNING_SYM
                                            [action] => 
            $$= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOUND_SYM
                                            [action] => 
            $$= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQLEXCEPTION_SYM
                                            [action] => 
            $$= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [signal_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIGNAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => signal_value
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_set_signal_information
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal($2, $3);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [signal_value] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition($1, false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            $$= cond;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sqlstate
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_signal_value] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signal_value
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_set_signal_information] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= new (YYTHD->mem_root) Set_signal_information(); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => signal_information_item_list
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [signal_information_item_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signal_condition_information_item_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => signal_allowed_expr
                                            [action] => 
            $$= new (YYTHD->mem_root) Set_signal_information();
            if ($$->set_item($1, $3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signal_information_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => signal_condition_information_item_name
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => signal_allowed_expr
                                            [action] => 
            $$= $1;
            if ($$->set_item($3, $5))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [signal_allowed_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => literal
                                            [action] =>  ITEMIZE($1, &$$); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => variable
                                            [action] => 
            ITEMIZE($1, &$1);

            if ($1->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) $1;
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            $$= $1;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident
                                            [action] =>  ITEMIZE($1, &$$); 
                                        )

                                )

                        )

                )

        )

    [signal_condition_information_item_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CLASS_ORIGIN_SYM
                                            [action] =>  $$= CIN_CLASS_ORIGIN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBCLASS_ORIGIN_SYM
                                            [action] =>  $$= CIN_SUBCLASS_ORIGIN; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_CATALOG_SYM
                                            [action] =>  $$= CIN_CONSTRAINT_CATALOG; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_SCHEMA_SYM
                                            [action] =>  $$= CIN_CONSTRAINT_SCHEMA; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_NAME_SYM
                                            [action] =>  $$= CIN_CONSTRAINT_NAME; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CATALOG_NAME_SYM
                                            [action] =>  $$= CIN_CATALOG_NAME; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SCHEMA_NAME_SYM
                                            [action] =>  $$= CIN_SCHEMA_NAME; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_NAME_SYM
                                            [action] =>  $$= CIN_TABLE_NAME; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_NAME_SYM
                                            [action] =>  $$= CIN_COLUMN_NAME; 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURSOR_NAME_SYM
                                            [action] =>  $$= CIN_CURSOR_NAME; 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MESSAGE_TEXT_SYM
                                            [action] =>  $$= CIN_MESSAGE_TEXT; 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MYSQL_ERRNO_SYM
                                            [action] =>  $$= CIN_MYSQL_ERRNO; 
                                        )

                                )

                        )

                )

        )

    [resignal_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESIGNAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_signal_value
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_set_signal_information
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal($2, $3);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [get_diagnostics] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GET_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => which_area
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DIAGNOSTICS_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => diagnostics_information
                                            [action] => 
            Diagnostics_information *info= $4;

            info->set_which_da($2);

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [which_area] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= Diagnostics_information::CURRENT_AREA; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURRENT_SYM
                                            [action] =>  $$= Diagnostics_information::CURRENT_AREA; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STACKED_SYM
                                            [action] =>  $$= Diagnostics_information::STACKED_AREA; 
                                        )

                                )

                        )

                )

        )

    [diagnostics_information] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => statement_information
                                            [action] => 
            $$= new (YYTHD->mem_root) Statement_information($1);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONDITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => condition_number
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => condition_information
                                            [action] => 
            $$= new (YYTHD->mem_root) Condition_information($2, $3);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [statement_information] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => statement_information_item
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Statement_information_item>;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => statement_information
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => statement_information_item
                                            [action] => 
            if ($1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [statement_information_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_target_specification
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => statement_information_item_name
                                            [action] => 
            $$= new (YYTHD->mem_root) Statement_information_item($3, $1);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => simple_target_specification:
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            $$=
              create_item_for_sp_var(
                thd, $1, NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                @1.raw.start,
                @1.raw.end);

            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= NEW_PTN Item_func_get_user_var(@$, $2);
            ITEMIZE($$, &$$);
          
                                        )

                                )

                        )

                )

        )

    [statement_information_item_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUMBER_SYM
                                            [action] =>  $$= Statement_information_item::NUMBER; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_COUNT_SYM
                                            [action] =>  $$= Statement_information_item::ROW_COUNT; 
                                        )

                                )

                        )

                )

        )

    [condition_number] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signal_allowed_expr
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [condition_information] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => condition_information_item
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Condition_information_item>;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => condition_information
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => condition_information_item
                                            [action] => 
            if ($1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [condition_information_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_target_specification
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => condition_information_item_name
                                            [action] => 
            $$= new (YYTHD->mem_root) Condition_information_item($3, $1);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => condition_information_item_name:
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => CLASS_ORIGIN_SYM
                                            [action] =>  $$= Condition_information_item::CLASS_ORIGIN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBCLASS_ORIGIN_SYM
                                            [action] =>  $$= Condition_information_item::SUBCLASS_ORIGIN; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_CATALOG_SYM
                                            [action] =>  $$= Condition_information_item::CONSTRAINT_CATALOG; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_SCHEMA_SYM
                                            [action] =>  $$= Condition_information_item::CONSTRAINT_SCHEMA; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_NAME_SYM
                                            [action] =>  $$= Condition_information_item::CONSTRAINT_NAME; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CATALOG_NAME_SYM
                                            [action] =>  $$= Condition_information_item::CATALOG_NAME; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SCHEMA_NAME_SYM
                                            [action] =>  $$= Condition_information_item::SCHEMA_NAME; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_NAME_SYM
                                            [action] =>  $$= Condition_information_item::TABLE_NAME; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_NAME_SYM
                                            [action] =>  $$= Condition_information_item::COLUMN_NAME; 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURSOR_NAME_SYM
                                            [action] =>  $$= Condition_information_item::CURSOR_NAME; 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MESSAGE_TEXT_SYM
                                            [action] =>  $$= Condition_information_item::MESSAGE_TEXT; 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MYSQL_ERRNO_SYM
                                            [action] =>  $$= Condition_information_item::MYSQL_ERRNO; 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RETURNED_SQLSTATE_SYM
                                            [action] =>  $$= Condition_information_item::RETURNED_SQLSTATE; 
                                        )

                                )

                        )

                )

        )

    [sp_decl_idents] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable($1, TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               $1,
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            $$= 1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_decl_idents
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable($3, TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), $3.str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               $3,
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            $$= $1 + 1;
          
                                        )

                                )

                        )

                )

        )

    [sp_opt_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$ = NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  Lex->sphead->m_parser_data.push_expr_start_ptr(@1.raw.end); 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($3, &$3);

            $$ = $3;
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_statement
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_return
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_if
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => case_stmt_specification
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_labeled_block
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_unlabeled_block
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_labeled_control
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_unlabeled
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_leave
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_iterate
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_open
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_fetch
                                            [action] => 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_proc_stmt_close
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_if] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IF
                                            [action] =>  Lex->sphead->m_parser_data.new_cont_backpatch(); 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_if
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => IF
                                            [action] => 
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_statement] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => statement
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            @2.raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_return] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RETURN_SYM
                                            [action] =>              /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr(@1.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>              /*$4*/
            ITEMIZE($3, &$3);

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, @3.raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, $3, expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_unlabeled] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_unlabeled_control
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_leave] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEAVE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => label_ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label($2);

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", $2.str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_iterate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ITERATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => label_ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label($2);

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", $2.str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_open] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPEN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor($2, &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), $2.str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_fetch] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FETCH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_opt_fetch_noise
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor($3, &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), $3.str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => sp_fetch_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_proc_stmt_close] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CLOSE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor($2, &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), $2.str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [sp_opt_fetch_noise] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEXT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_fetch_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable($1, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_fetch_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable($3, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), $3.str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          
                                        )

                                )

                        )

                )

        )

    [sp_if] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>                      /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(@0.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>                      /*$3*/
            ITEMIZE($2, &$2);

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, @2.raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     $2, expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => THEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] =>                      /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => sp_elseifs
                                            [action] =>                      /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          
                                        )

                                )

                        )

                )

        )

    [sp_elseifs] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ELSEIF_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_if
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ELSE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [case_stmt_specification] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_case_stmt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => searched_case_stmt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [simple_case_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASE_SYM
                                            [action] =>                              /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr(@1.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>                              /*$4*/
            ITEMIZE($3, &$3);

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, @3.raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, $3, case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_when_clause_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => else_clause_opt
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => CASE_SYM
                                            [action] =>                              /*$9*/
            case_stmt_action_end_case(Lex, true);
          
                                        )

                                )

                        )

                )

        )

    [searched_case_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASE_SYM
                                            [action] => 
            case_stmt_action_case(YYTHD);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => searched_when_clause_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => else_clause_opt
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => CASE_SYM
                                            [action] => 
            case_stmt_action_end_case(Lex, false);
          
                                        )

                                )

                        )

                )

        )

    [simple_when_clause_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_when_clause
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_when_clause_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_when_clause
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [searched_when_clause_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => searched_when_clause
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => searched_when_clause_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => searched_when_clause
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [simple_when_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHEN_SYM
                                            [action] =>                              /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(@1.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>                              /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE($3, &$3);

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, @3.raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        $3, when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => THEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] =>                              /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [searched_when_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHEN_SYM
                                            [action] =>                              /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(@1.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>                              /*$4*/
            ITEMIZE($3, &$3);

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, @3.raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, $3, when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => THEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] =>                              /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [else_clause_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ELSE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sp_labeled_control] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => label_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ':'
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label($1);

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, $1, sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_unlabeled_control
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_opt_label
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ($5.str)
            {
              if (my_strcasecmp(system_charset_info, $5.str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), $5.str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          
                                        )

                                )

                        )

                )

        )

    [sp_opt_label] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= null_lex_str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => label_ident
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [sp_labeled_block] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => label_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ':'
                                            [action] => 
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label($1);

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), $1.str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, $1, sp->instructions());
            lab->type= sp_label::BEGIN;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_block_content
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_opt_label
                                            [action] => 
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ($5.str)
            {
              if (my_strcasecmp(system_charset_info, $5.str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), $5.str);
                MYSQL_YYABORT;
              }
            }
          
                                        )

                                )

                        )

                )

        )

    [sp_unlabeled_block] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_block_content
                                            [action] => 
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          
                                        )

                                )

                        )

                )

        )

    [sp_block_content] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEGIN_SYM
                                            [action] =>  /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_decls
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_proc_stmts
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => END
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ($3.hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ($3.curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, $3.curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          
                                        )

                                )

                        )

                )

        )

    [sp_unlabeled_control] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOOP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => LOOP_SYM
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHILE_SYM
                                            [action] =>                              /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(@1.raw.end);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>                              /*$4*/
            ITEMIZE($3, &$3);

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, @3.raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, $3, expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => DO_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => WHILE_SYM
                                            [action] =>                              /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPEAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_proc_stmts1
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => UNTIL_SYM
                                            [action] =>                              /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(@3.raw.end);
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] =>                              /*$6*/
            ITEMIZE($5, &$5);

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, @5.raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, $5, expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => REPEAT_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [trg_action_time] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEFORE_SYM
                                            [action] =>  $$= TRG_ACTION_BEFORE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AFTER_SYM
                                            [action] =>  $$= TRG_ACTION_AFTER; 
                                        )

                                )

                        )

                )

        )

    [trg_event] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT
                                            [action] =>  $$= TRG_EVENT_INSERT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] =>  $$= TRG_EVENT_UPDATE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] =>  $$= TRG_EVENT_DELETE; 
                                        )

                                )

                        )

                )

        )

    [change_tablespace_access] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ts_access_mode
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [change_tablespace_info] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHANGE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ts_datafile
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => change_ts_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [tablespace_info] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ts_datafile
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_logfile_group_name
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => tablespace_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_logfile_group_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGFILE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= $4.str;
          
                                        )

                                )

                        )

                )

        )

    [alter_tablespace_info] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ts_datafile
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => alter_tablespace_option_list
                                            [action] => 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ts_datafile
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => alter_tablespace_option_list
                                            [action] => 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          
                                        )

                                )

                        )

                )

        )

    [logfile_group_info] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => add_log_file
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => logfile_group_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_logfile_group_info] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => add_log_file
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_logfile_group_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [add_log_file] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => lg_undofile
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => lg_redofile
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [change_ts_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => change_ts_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [change_ts_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => change_ts_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => change_ts_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => change_ts_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => change_ts_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => change_ts_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [change_ts_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_initial_size
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_autoextend_size
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_max_size
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [tablespace_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [tablespace_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => tablespace_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [tablespace_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_initial_size
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_autoextend_size
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_max_size
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_extent_size
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_nodegroup
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_engine
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ts_wait
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_comment
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_file_block_size
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_tablespace_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_tablespace_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_tablespace_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_tablespace_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => alter_tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_tablespace_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_tablespace_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_tablespace_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_initial_size
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_autoextend_size
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_max_size
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_engine
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ts_wait
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [logfile_group_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [logfile_group_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => logfile_group_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [logfile_group_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_initial_size
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_undo_buffer_size
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_redo_buffer_size
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_nodegroup
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_engine
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ts_wait
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_comment
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_logfile_group_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_logfile_group_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_logfile_group_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_logfile_group_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => alter_logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_logfile_group_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_logfile_group_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_logfile_group_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_initial_size
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_engine
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ts_wait
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ts_datafile] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATAFILE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= $2.str;
          
                                        )

                                )

                        )

                )

        )

    [lg_undofile] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDOFILE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= $2.str;
          
                                        )

                                )

                        )

                )

        )

    [lg_redofile] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDOFILE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= $2.str;
          
                                        )

                                )

                        )

                )

        )

    [tablespace_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= $1.str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          
                                        )

                                )

                        )

                )

        )

    [logfile_group_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= $1.str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          
                                        )

                                )

                        )

                )

        )

    [ts_access_mode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_ONLY_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_WRITE_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ACCESSIBLE_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_initial_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INITIAL_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_autoextend_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AUTOEXTEND_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_max_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_extent_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENT_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_undo_buffer_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDO_BUFFER_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_redo_buffer_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDO_BUFFER_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_nodegroup] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NODEGROUP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_comment] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= $3.str;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_engine] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_storage
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => storage_engines
                                            [action] => 
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= $4;
          
                                        )

                                )

                        )

                )

        )

    [opt_ts_file_block_size] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FILE_BLOCK_SIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => size_number
                                            [action] => 
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [ts_wait] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WAIT_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_WAIT_SYM
                                            [action] => 
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          
                                        )

                                )

                        )

                )

        )

    [size_number] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => real_ulonglong_num
                                            [action] =>  $$= $1;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT_sys
                                            [action] => 
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= $1.str;
            size_t str_len= $1.length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            $$= number;
          
                                        )

                                )

                        )

                )

        )

    [create2] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create2a
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_create_table_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_create_partitioning
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => create3
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, $2, NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, $3, NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          
                                        )

                                )

                        )

                )

        )

    [create2a] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_field_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_create_table_options
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_create_partitioning
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => create3
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_create_partitioning
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_select
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
             CONTEXTUALIZE($2);
             Select->set_braces(1);
           
                                        )

                                    [3] => Array
                                        (
                                            [id] => union_opt
                                            [action] => 
             if ($5 != NULL)
               CONTEXTUALIZE($5);
           
                                        )

                                )

                        )

                )

        )

    [create3] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_duplicate
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_as
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => create_select
                                            [action] => 
            CONTEXTUALIZE($3);
            Select->set_braces(0);
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_union_clause
                                            [action] => 
            if ($5 != NULL)
              CONTEXTUALIZE($5);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_duplicate
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_as
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => create_select
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            CONTEXTUALIZE($4);
            Select->set_braces(1);
          
                                        )

                                    [5] => Array
                                        (
                                            [id] => union_opt
                                            [action] => 
             if ($7 != NULL)
               CONTEXTUALIZE($7);
          
                                        )

                                )

                        )

                )

        )

    [opt_create_partitioning] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_partitioning
                                            [action] => 
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          
                                        )

                                )

                        )

                )

        )

    [opt_partitioning] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => partitioning
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [partitioning] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => partition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [partition_entry] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_syntax_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => partition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [partition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_type_def
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_num_parts
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_sub_part
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => part_defs
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_type_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_linear
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_key_algo
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => part_field_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_linear
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => HASH_SYM
                                            [action] =>  Lex->part_info->part_type= HASH_PARTITION; 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_func
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RANGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_func
                                            [action] =>  Lex->part_info->part_type= RANGE_PARTITION; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RANGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_column_list
                                            [action] =>  Lex->part_info->part_type= RANGE_PARTITION; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIST_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_func
                                            [action] =>  Lex->part_info->part_type= LIST_PARTITION; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIST_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_column_list
                                            [action] =>  Lex->part_info->part_type= LIST_PARTITION; 
                                        )

                                )

                        )

                )

        )

    [opt_linear] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINEAR_SYM
                                            [action] =>  Lex->part_info->linear_hash_ind= TRUE;
                                        )

                                )

                        )

                )

        )

    [opt_key_algo] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            switch ($3) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [part_field_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_field_item_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_field_item_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_field_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_field_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_field_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_field_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back($1.str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [part_column_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMNS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_field_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          
                                        )

                                )

                        )

                )

        )

    [part_func] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_func_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>(@1.cpp.end), $2,
                                         const_cast<char *>(@2.cpp.end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          
                                        )

                                )

                        )

                )

        )

    [sub_part_func] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_func_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>(@1.cpp.end), $2,
                                              const_cast<char *>(@2.cpp.end), TRUE))
            { MYSQL_YYABORT; }
          
                                        )

                                )

                        )

                )

        )

    [opt_num_parts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITIONS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            uint num_parts= $2;
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          
                                        )

                                )

                        )

                )

        )

    [opt_sub_part] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_linear
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => HASH_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => sub_part_func
                                            [action] =>  Lex->part_info->subpart_type= HASH_PARTITION; 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_num_subparts
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_linear
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_key_algo
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => sub_part_field_list
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_num_subparts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sub_part_field_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sub_part_field_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sub_part_field_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sub_part_field_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sub_part_field_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back($1.str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [part_func_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            ITEMIZE($1, &$1);

            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            $$=$1;
          
                                        )

                                )

                        )

                )

        )

    [opt_num_subparts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITIONS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            uint num_parts= $2;
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          
                                        )

                                )

                        )

                )

        )

    [part_defs] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_def_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          
                                        )

                                )

                        )

                )

        )

    [part_def_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_definition
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_def_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_definition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_definition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_name
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_part_values
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_part_options
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_sub_partition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= $1.str;
          
                                        )

                                )

                        )

                )

        )

    [opt_part_values] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LESS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => THAN_SYM
                                            [action] => 
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => part_func_max
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_values_in
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_func_max] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_VALUE_SYM
                                            [action] => 
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_values_in] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_item
                                            [action] => 
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_value_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_syntax_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [part_value_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_value_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_value_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_value_item_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          
                                        )

                                )

                        )

                )

        )

    [part_value_item_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_expr_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => part_value_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => part_value_expr_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [part_value_expr_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_VALUE_SYM
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_syntax_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            ITEMIZE($1, &$1);

            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= $1;

            if (!lex->safe_to_cache_query)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [opt_sub_partition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sub_part_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          
                                        )

                                )

                        )

                )

        )

    [sub_part_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sub_part_definition
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sub_part_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sub_part_definition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sub_part_definition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITION_SYM
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => sub_name
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_part_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [sub_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] =>  Lex->part_info->curr_part_elem->partition_name= $1.str; 
                                        )

                                )

                        )

                )

        )

    [opt_part_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_part_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_part_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_part_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_part_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_part_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_part_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] =>  Lex->part_info->curr_part_elem->tablespace_name= $3.str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_storage
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => storage_engines
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= $4;
            part_info->default_engine_type= $4;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NODEGROUP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] =>  Lex->part_info->curr_part_elem->nodegroup_id= (uint16) $3; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_ROWS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulonglong_num
                                            [action] =>  Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) $3; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIN_ROWS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulonglong_num
                                            [action] =>  Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) $3; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->part_info->curr_part_elem->data_file_name= $4.str; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->part_info->curr_part_elem->index_file_name= $4.str; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->part_info->curr_part_elem->part_comment= $3.str; 
                                        )

                                )

                        )

                )

        )

    [create_select] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_expression
                                            [action] => 
            $$= NEW_PTN PT_create_select($1, $2, $3, $4);
          
                                        )

                                )

                        )

                )

        )

    [opt_as] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_create_database_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_database_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_database_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_database_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_database_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_database_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_database_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => default_collation
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => default_charset
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_table_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_options
                                            [action] =>  $$= $1;
                                        )

                                )

                        )

                )

        )

    [table_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_option
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_options
                                            [action] =>  $$= $1 | $2; 
                                        )

                                )

                        )

                )

        )

    [table_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEMPORARY
                                            [action] =>  $$=HA_LEX_CREATE_TMP_TABLE; 
                                        )

                                )

                        )

                )

        )

    [opt_if_not_exists] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IF
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => EXISTS
                                            [action] =>  $$=HA_LEX_CREATE_IF_NOT_EXISTS; 
                                        )

                                )

                        )

                )

        )

    [opt_create_table_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_table_options_space_separated] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_table_options_space_separated
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_table_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_table_options
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => create_table_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_table_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => storage_engines
                                            [action] => 
            Lex->create_info.db_type= $3;
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_ROWS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulonglong_num
                                            [action] => 
            Lex->create_info.max_rows= $3;
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIN_ROWS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulonglong_num
                                            [action] => 
            Lex->create_info.min_rows= $3;
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AVG_ROW_LENGTH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->create_info.avg_row_length=$3;
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.password=$3.str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.comment=$3;
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPRESSION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.used_fields|= HA_CREATE_USED_COMPRESS;
            Lex->create_info.compress= $3;
	  
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AUTO_INC
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulonglong_num
                                            [action] => 
            Lex->create_info.auto_increment_value=$3;
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PACK_KEYS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            switch($3) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PACK_KEYS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_AUTO_RECALC_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            switch($3) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_AUTO_RECALC_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_PERSISTENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            switch($3) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_PERSISTENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_SAMPLE_PAGES_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ($3 == 0 || $3 > 0xffff)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=$3;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_SAMPLE_PAGES_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECKSUM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->create_info.table_options|= $3 ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_CHECKSUM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
             Lex->create_info.table_options|= $3 ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELAY_KEY_WRITE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->create_info.table_options|= $3 ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => row_types
                                            [action] => 
            Lex->create_info.row_type= $3;
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_table_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => default_charset
                                            [action] => 
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => default_collation
                                            [action] => 
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT_METHOD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => merge_insert_types
                                            [action] => 
            Lex->create_info.merge_insert_method= $3;
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.data_file_name= $4.str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.index_file_name= $4.str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Lex->create_info.tablespace= $3.str;
            Lex->create_info.used_fields|= HA_CREATE_USED_TABLESPACE;
          
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DISK_SYM
                                            [action] => Lex->create_info.storage_media= HA_SM_DISK;
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => MEMORY_SYM
                                            [action] => Lex->create_info.storage_media= HA_SM_MEMORY;
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONNECTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->create_info.connect_string.str= $3.str;
            Lex->create_info.connect_string.length= $3.length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KEY_BLOCK_SIZE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= $3;
          
                                        )

                                )

                        )

                )

        )

    [default_charset] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_default
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => charset_name_or_default
                                            [action] => 
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && $4 &&
                 !my_charset_same(cinfo->default_table_charset,$4))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", $4->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= $4;
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          
                                        )

                                )

                        )

                )

        )

    [default_collation] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_default
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COLLATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => collation_name_or_default
                                            [action] => 
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && $4 &&
                 !($4= merge_charset_and_collation(cinfo->default_table_charset,
                                                   $4)))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= $4;
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          
                                        )

                                )

                        )

                )

        )

    [storage_engines] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &$1,
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              $$= plugin_data<handlerton*>(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), $1.str);
                MYSQL_YYABORT;
              }
              $$= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  $1.str);
            }
          
                                        )

                                )

                        )

                )

        )

    [known_storage_engines] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &$1,
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              $$= plugin_data<handlerton*>(plugin);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [row_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$= ROW_TYPE_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIXED_SYM
                                            [action] =>  $$= ROW_TYPE_FIXED; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DYNAMIC_SYM
                                            [action] =>  $$= ROW_TYPE_DYNAMIC; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPRESSED_SYM
                                            [action] =>  $$= ROW_TYPE_COMPRESSED; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDUNDANT_SYM
                                            [action] =>  $$= ROW_TYPE_REDUNDANT; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPACT_SYM
                                            [action] =>  $$= ROW_TYPE_COMPACT; 
                                        )

                                )

                        )

                )

        )

    [merge_insert_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] =>  $$= MERGE_INSERT_DISABLED; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIRST_SYM
                                            [action] =>  $$= MERGE_INSERT_TO_FIRST; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LAST_SYM
                                            [action] =>  $$= MERGE_INSERT_TO_LAST; 
                                        )

                                )

                        )

                )

        )

    [udf_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STRING_SYM
                                            [action] => $$ = (int) STRING_RESULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REAL
                                            [action] => $$ = (int) REAL_RESULT; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_SYM
                                            [action] => $$ = (int) DECIMAL_RESULT; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INT_SYM
                                            [action] => $$ = (int) INT_RESULT; 
                                        )

                                )

                        )

                )

        )

    [create_field_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_list
                                            [action] => 
          Lex->create_last_non_select_table= Lex->last_table();
        
                                        )

                                )

                        )

                )

        )

    [field_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_list_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_list_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [field_list_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => column_def
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_def
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [column_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_spec
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_check_constraint
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_spec
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => references
                                            [action] => 
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          
                                        )

                                )

                        )

                )

        )

    [key_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => normal_key_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => key_alg
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => normal_key_options
                                            [action] => 
            if (add_create_index (Lex, $1, $2))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fulltext
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => fulltext_key_options
                                            [action] => 
            if (add_create_index (Lex, $1, $3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => spatial
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => spatial_key_options
                                            [action] => 
            if (add_create_index (Lex, $1, $3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_constraint
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => constraint_key_type
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => key_alg
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => normal_key_options
                                            [action] => 
            if (add_create_index (Lex, $2, $3.str ? $3 : $1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_constraint
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOREIGN
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => references
                                            [action] => 
            LEX *lex=Lex;
            Key *key= new Foreign_key($4.str ? $4 : $1, lex->col_list,
                                      $8->db,
                                      $8->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, KEYTYPE_MULTIPLE, $1.str ? $1 : $4,
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_constraint
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => check_constraint
                                            [action] => 
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          
                                        )

                                )

                        )

                )

        )

    [opt_check_constraint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => check_constraint
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [check_constraint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            ITEMIZE($3, &$3);
          
                                        )

                                )

                        )

                )

        )

    [opt_constraint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= null_lex_str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => constraint
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [constraint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_ident
                                            [action] =>  $$=$2; 
                                        )

                                )

                        )

                )

        )

    [field_spec] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->gcol_info= 0;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_def
                                            [action] => 
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &$1, (enum enum_field_types) $3,
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [field_def] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_attribute
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_collate_explicit
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_generated_always
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => generated_column_func
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_stored_attribute
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_gcol_attribute_list
                                            [action] => 
            $$= $1;
            if (Lex->charset)
            {
              Lex->charset= merge_charset_and_collation(Lex->charset, $2);
              if (Lex->charset == NULL)
                MYSQL_YYABORT;
            }
            else
              Lex->charset= $2;
            Lex->gcol_info->set_field_type((enum enum_field_types) $$);
          
                                        )

                                )

                        )

                )

        )

    [opt_generated_always] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GENERATED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ALWAYS_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_gcol_attribute_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => gcol_attribute_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [gcol_attribute_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => gcol_attribute_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => gcol_attribute
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => gcol_attribute
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [gcol_attribute] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->comment= $2; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] =>  Lex->type|= NOT_NULL_FLAG; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_primary
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                )

        )

    [opt_stored_attribute] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VIRTUAL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORED_SYM
                                            [action] => 
            Lex->gcol_info->set_field_stored(TRUE);
          
                                        )

                                )

                        )

                )

        )

    [parse_gcol_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARSE_GCOL_EXPR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => generated_column_func
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            /* 
              "PARSE_GCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            if (!Lex->parse_gcol_expr)
            {
              YYTHD->parse_error_at(@1, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [generated_column_func] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            Lex->gcol_info= new Generated_column();
            if (!Lex->gcol_info)
            {
              mem_alloc_error(sizeof(Generated_column));
              MYSQL_YYABORT;
            }
            ITEMIZE($1, &$1);
            uint expr_len= (uint)@1.cpp.length();
            Lex->gcol_info->expr_str.str=
              (char* ) sql_memdup(@1.cpp.start, expr_len);
            Lex->gcol_info->expr_str.length= expr_len;
            Lex->gcol_info->expr_item= $1;
            /*
              @todo: problems:
              - here we have a call to the constructor of
              Generated_column, which takes no argument and builds a
              non-functional object
              - then we fill it member by member; either by assignment to
              public members (!) or by call to a public setter. Both these
              techniques allow changing, at any future point in time, vital
              properties of the object which should rather be constant.
              Class should rather have a constructor which takes arguments,
              sets members, and members should be constant after that.
              This would also get rid of some setters like set_field_stored();
            */
          
                                        )

                                )

                        )

                )

        )

    [type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => int_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            $$=$1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => real_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_precision
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            $$=$1;
            Lex->length= const_cast<char *>($2.length);
            Lex->dec= const_cast<char *>($2.dec);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLOAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => float_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2.length);
            Lex->dec= const_cast<char *>($2.dec);
            $$=MYSQL_TYPE_FLOAT;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_SYM
                                            [action] => 
            Lex->length= (char*) "1";
            $$=MYSQL_TYPE_BIT;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            $$=MYSQL_TYPE_BIT;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BOOL_SYM
                                            [action] => 
            Lex->length= (char*) "1";
            $$=MYSQL_TYPE_TINY;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BOOLEAN_SYM
                                            [action] => 
            Lex->length= (char*) "1";
            $$=MYSQL_TYPE_TINY;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => char
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset= $3.charset;
            Lex->type|= $3.type_flags;
            $$=MYSQL_TYPE_STRING;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => char
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->length= (char*) "1";
            Lex->charset= $2.charset;
            Lex->type|= $2.type_flags;
            $$=MYSQL_TYPE_STRING;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => nchar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_bin_mod
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->type|= $3;
            $$=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => nchar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_bin_mod
                                            [action] => 
            Lex->length= (char*) "1";
            Lex->type|= $2;
            $$=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_STRING;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_STRING;
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => varchar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset= $3.charset;
            Lex->type|= $3.type_flags;
            $$= MYSQL_TYPE_VARCHAR;
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => nvarchar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_bin_mod
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->type|= $3;
            $$= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VARBINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset=&my_charset_bin;
            $$= MYSQL_TYPE_VARCHAR;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => YEAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            $$=MYSQL_TYPE_YEAR;
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] =>  $$=MYSQL_TYPE_DATE; 
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => type_datetime_precision
                                            [action] => 
            Lex->dec= const_cast<char *>($2);
            $$= MYSQL_TYPE_TIME2;
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => type_datetime_precision
                                            [action] => 
            Lex->dec= const_cast<char *>($2);
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              $$=MYSQL_TYPE_DATETIME2;
            else
            {
              /*
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;
              /*
                To flag the current statement as dependent for binary
                logging on the session var. Extra copying to Lex is
                done in case prepared stmt.
              */
              Lex->binlog_need_explicit_defaults_ts=
                YYTHD->binlog_need_explicit_defaults_ts= true;

              $$=MYSQL_TYPE_TIMESTAMP2;
            }
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATETIME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => type_datetime_precision
                                            [action] => 
            Lex->dec= const_cast<char *>($2);
            $$= MYSQL_TYPE_DATETIME2;
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TINYBLOB
                                            [action] => 
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_TINY_BLOB;
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BLOB_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_BLOB;
          
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => spatial_type
                                            [action] => 
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)$1;
            $$=MYSQL_TYPE_GEOMETRY;
          
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEDIUMBLOB
                                            [action] => 
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_MEDIUM_BLOB;
          
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONGBLOB
                                            [action] => 
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_LONG_BLOB;
          
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARBINARY
                                            [action] => 
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_MEDIUM_BLOB;
          
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => varchar
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $3.charset;
            Lex->type|= $3.type_flags;
            $$=MYSQL_TYPE_MEDIUM_BLOB;
          
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TINYTEXT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $2.charset;
            Lex->type|= $2.type_flags;
            $$=MYSQL_TYPE_TINY_BLOB;
          
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->length= const_cast<char *>($2);
            Lex->charset= $3.charset;
            Lex->type|= $3.type_flags;
            $$=MYSQL_TYPE_BLOB;
          
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEDIUMTEXT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $2.charset;
            Lex->type|= $2.type_flags;
            $$=MYSQL_TYPE_MEDIUM_BLOB;
          
                                        )

                                )

                        )

                    [31] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONGTEXT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $2.charset;
            Lex->type|= $2.type_flags;
            $$=MYSQL_TYPE_LONG_BLOB;
          
                                        )

                                )

                        )

                    [32] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => float_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2.length);
            Lex->dec= const_cast<char *>($2.dec);
            $$=MYSQL_TYPE_NEWDECIMAL;
          
                                        )

                                )

                        )

                    [33] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUMERIC_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => float_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2.length);
            Lex->dec= const_cast<char *>($2.dec);
            $$=MYSQL_TYPE_NEWDECIMAL;
          
                                        )

                                )

                        )

                    [34] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIXED_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => float_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_options
                                            [action] => 
            Lex->length= const_cast<char *>($2.length);
            Lex->dec= const_cast<char *>($2.dec);
            $$=MYSQL_TYPE_NEWDECIMAL;
          
                                        )

                                )

                        )

                    [35] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENUM
                                            [action] => Lex->interval_list.empty();
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => string_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $6.charset;
            Lex->type|= $6.type_flags;
            $$=MYSQL_TYPE_ENUM;
          
                                        )

                                )

                        )

                    [36] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] =>  Lex->interval_list.empty();
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => string_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $6.charset;
            Lex->type|= $6.type_flags;
            $$=MYSQL_TYPE_SET;
          
                                        )

                                )

                        )

                    [37] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            Lex->charset= $2.charset;
            Lex->type|= $2.type_flags;
            $$=MYSQL_TYPE_MEDIUM_BLOB;
          
                                        )

                                )

                        )

                    [38] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERIAL_SYM
                                            [action] => 
            $$=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          
                                        )

                                )

                        )

                    [39] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => JSON_SYM
                                            [action] => 
            Lex->charset=&my_charset_bin;
            $$=MYSQL_TYPE_JSON;
          
                                        )

                                )

                        )

                )

        )

    [spatial_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GEOMETRY_SYM
                                            [action] =>  $$= Field::GEOM_GEOMETRY; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GEOMETRYCOLLECTION
                                            [action] =>  $$= Field::GEOM_GEOMETRYCOLLECTION; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POINT_SYM
                                            [action] => 
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            $$= Field::GEOM_POINT;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOINT
                                            [action] =>  $$= Field::GEOM_MULTIPOINT; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINESTRING
                                            [action] =>  $$= Field::GEOM_LINESTRING; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTILINESTRING
                                            [action] =>  $$= Field::GEOM_MULTILINESTRING; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POLYGON
                                            [action] =>  $$= Field::GEOM_POLYGON; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOLYGON
                                            [action] =>  $$= Field::GEOM_MULTIPOLYGON; 
                                        )

                                )

                        )

                )

        )

    [char] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [nchar] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NATIONAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [varchar] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => char
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARYING
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VARCHAR
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [nvarchar] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NATIONAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARCHAR
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NVARCHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARCHAR
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NATIONAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => VARYING
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARYING
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [int_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INT_SYM
                                            [action] =>  $$=MYSQL_TYPE_LONG; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TINYINT
                                            [action] =>  $$=MYSQL_TYPE_TINY; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SMALLINT
                                            [action] =>  $$=MYSQL_TYPE_SHORT; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEDIUMINT
                                            [action] =>  $$=MYSQL_TYPE_INT24; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIGINT
                                            [action] =>  $$=MYSQL_TYPE_LONGLONG; 
                                        )

                                )

                        )

                )

        )

    [real_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REAL
                                            [action] => 
            $$= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DOUBLE_SYM
                                            [action] =>  $$=MYSQL_TYPE_DOUBLE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DOUBLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PRECISION
                                            [action] =>  $$=MYSQL_TYPE_DOUBLE; 
                                        )

                                )

                        )

                )

        )

    [float_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
            $$.length= $1;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => precision
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [precision] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$.length= $2.str;
            $$.dec= $4.str;
          
                                        )

                                )

                        )

                )

        )

    [type_datetime_precision] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                )

        )

    [func_datetime_precision] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
             int error;
             $$= (ulong) my_strtoll10($2.str, NULL, &error);
           
                                        )

                                )

                        )

                )

        )

    [field_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_opt_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [field_opt_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_opt_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [field_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIGNED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNSIGNED
                                            [action] =>  Lex->type|= UNSIGNED_FLAG;
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ZEROFILL
                                            [action] =>  Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; 
                                        )

                                )

                        )

                )

        )

    [field_length] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DECIMAL_NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                )

        )

    [opt_field_length] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; /* use default length */ 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_length
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_precision] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.length= NULL;
            $$.dec = NULL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => precision
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_attribute] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_attribute_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_attribute_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_attribute_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => attribute
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => attribute
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [attribute] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] => 
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] =>  Lex->type|= NOT_NULL_FLAG; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => now_or_signed_literal
                                            [action] =>  Lex->default_value=$2; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => now
                                            [action] => 
            Item *item= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>($3));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AUTO_INC
                                            [action] =>  Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERIAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => VALUE_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_primary
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->comment= $2; 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => collation_name
                                            [action] => 
            if (Lex->charset && !my_charset_same(Lex->charset,$2))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       $2->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=$2;
            }
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FIXED_SYM
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DYNAMIC_SYM
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DISK_SYM
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => MEMORY_SYM
                                            [action] => 
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          
                                        )

                                )

                        )

                )

        )

    [type_with_opt_collate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_collate
                                            [action] => 
          $$= $1;

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, $2)))
              MYSQL_YYABORT;
          }
          else if ($2)
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        
                                        )

                                )

                        )

                )

        )

    [now] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOW_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => func_datetime_precision
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [now_or_signed_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => now
                                            [action] => 
            $$= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>($1));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => signed_literal
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                )

        )

    [charset] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHARSET
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [charset_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            if (!($$=get_charset_by_csname($1.str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] =>  $$= &my_charset_bin; 
                                        )

                                )

                        )

                )

        )

    [charset_name_or_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => charset_name
                                            [action] =>  $$=$1;   
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$=NULL; 
                                        )

                                )

                        )

                )

        )

    [opt_load_data_charset] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => charset_name_or_default
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [old_or_new_charset_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            if (!($$=get_charset_by_csname($1.str,MY_CS_PRIMARY,MYF(0))) &&
                !($$=get_old_charset_by_name($1.str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] =>  $$= &my_charset_bin; 
                                        )

                                )

                        )

                )

        )

    [old_or_new_charset_name_or_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => old_or_new_charset_name
                                            [action] =>  $$=$1;   
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$=NULL; 
                                        )

                                )

                        )

                )

        )

    [collation_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            if (!($$= mysqld_collation_get_by_name($1.str)))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_collate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => collation_name_or_default
                                            [action] =>  $$=$2; 
                                        )

                                )

                        )

                )

        )

    [opt_collate_explicit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => collation_name
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [collation_name_or_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => collation_name
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$=NULL; 
                                        )

                                )

                        )

                )

        )

    [opt_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ascii] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASCII_SYM
                                            [action] =>  $$= &my_charset_latin1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ASCII_SYM
                                            [action] =>  $$= &my_charset_latin1_bin; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASCII_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BINARY
                                            [action] =>  $$= &my_charset_latin1_bin; 
                                        )

                                )

                        )

                )

        )

    [unicode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNICODE_SYM
                                            [action] => 
            if (!($$= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNICODE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
            if (!($$= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UNICODE_SYM
                                            [action] => 
            if (!($$= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          
                                        )

                                )

                        )

                )

        )

    [opt_binary] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.charset= NULL;
            $$.type_flags= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ascii
                                            [action] => 
            $$.charset= $1;
            $$.type_flags= 0;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => unicode
                                            [action] => 
            $$.charset= $1;
            $$.type_flags= 0;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BYTE_SYM
                                            [action] => 
            $$.charset= &my_charset_bin;
            $$.type_flags= 0;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => charset_name
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_bin_mod
                                            [action] => 
            $$.charset= $2;
            $$.type_flags= $3;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
            $$.charset= NULL;
            $$.type_flags= BINCMP_FLAG;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => charset_name
                                            [action] => 
            $$.charset= $3;
            $$.type_flags= BINCMP_FLAG;
          
                                        )

                                )

                        )

                )

        )

    [opt_bin_mod] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] =>  $$= BINCMP_FLAG; 
                                        )

                                )

                        )

                )

        )

    [ws_nweights] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
          if ($2 == 0)
          {
            my_syntax_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [ws_level_flag_desc] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASC
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DESC
                                            [action] =>  $$= 1 << MY_STRXFRM_DESC_SHIFT; 
                                        )

                                )

                        )

                )

        )

    [ws_level_flag_reverse] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REVERSE_SYM
                                            [action] =>  $$= 1 << MY_STRXFRM_REVERSE_SHIFT; 
                                        )

                                )

                        )

                )

        )

    [ws_level_flags] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_flag_desc
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_flag_desc
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ws_level_flag_reverse
                                            [action] =>  $$= $1 | $2; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_flag_reverse
                                            [action] =>  $$= $1 ; 
                                        )

                                )

                        )

                )

        )

    [ws_level_number] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
          $$= $1 < 1 ? 1 : ($1 > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : $1);
          $$--;
        
                                        )

                                )

                        )

                )

        )

    [ws_level_list_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_number
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ws_level_flags
                                            [action] => 
          $$= (1 | $2) << $1;
        
                                        )

                                )

                        )

                )

        )

    [ws_level_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_list_item
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ws_level_list_item
                                            [action] =>  $$|= $3; 
                                        )

                                )

                        )

                )

        )

    [ws_level_range] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_number
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ws_level_number
                                            [action] => 
          uint start= $1;
          uint end= $3;
          for ($$= 0; start <= end; start++)
            $$|= (1 << start);
        
                                        )

                                )

                        )

                )

        )

    [ws_level_list_or_range] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_list
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ws_level_range
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_ws_levels] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEVEL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ws_level_list_or_range
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [opt_primary] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIMARY_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [references] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REFERENCES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ref_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_match_clause
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_on_update_delete
                                            [action] => 
            $$=$2;
          
                                        )

                                )

                        )

                )

        )

    [opt_ref_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->ref_list.empty(); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ref_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [ref_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ref_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Key_part_spec *key= new Key_part_spec($3, 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Key_part_spec *key= new Key_part_spec($1, 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          
                                        )

                                )

                        )

                )

        )

    [opt_match_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->fk_match_option= FK_MATCH_UNDEF; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MATCH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FULL
                                            [action] =>  Lex->fk_match_option= FK_MATCH_FULL; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MATCH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTIAL
                                            [action] =>  Lex->fk_match_option= FK_MATCH_PARTIAL; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MATCH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SIMPLE_SYM
                                            [action] =>  Lex->fk_match_option= FK_MATCH_SIMPLE; 
                                        )

                                )

                        )

                )

        )

    [opt_on_update_delete] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
            LEX *lex= Lex;
            lex->fk_update_opt= $3;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= $3;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
            LEX *lex= Lex;
            lex->fk_update_opt= $3;
            lex->fk_delete_opt= $6;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => delete_option
                                            [action] => 
            LEX *lex= Lex;
            lex->fk_update_opt= $6;
            lex->fk_delete_opt= $3;
          
                                        )

                                )

                        )

                )

        )

    [delete_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESTRICT
                                            [action] =>  $$= FK_OPTION_RESTRICT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASCADE
                                            [action] =>  $$= FK_OPTION_CASCADE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] =>  $$= FK_OPTION_SET_NULL; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ACTION
                                            [action] =>  $$= FK_OPTION_NO_ACTION; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$= FK_OPTION_DEFAULT;  
                                        )

                                )

                        )

                )

        )

    [normal_key_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_or_index
                                            [action] =>  $$= KEYTYPE_MULTIPLE; 
                                        )

                                )

                        )

                )

        )

    [constraint_key_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIMARY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] =>  $$= KEYTYPE_PRIMARY; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_key_or_index
                                            [action] =>  $$= KEYTYPE_UNIQUE; 
                                        )

                                )

                        )

                )

        )

    [key_or_index] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_key_or_index] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [keys_or_index] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KEYS
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEXES
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_unique] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= KEYTYPE_MULTIPLE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNIQUE_SYM
                                            [action] =>  $$= KEYTYPE_UNIQUE; 
                                        )

                                )

                        )

                )

        )

    [fulltext] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FULLTEXT_SYM
                                            [action] =>  $$= KEYTYPE_FULLTEXT;
                                        )

                                )

                        )

                )

        )

    [spatial] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SPATIAL_SYM
                                            [action] => 
            $$= KEYTYPE_SPATIAL;
          
                                        )

                                )

                        )

                )

        )

    [init_key_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            Lex->key_create_info= default_key_create_info;
          
                                        )

                                )

                        )

                )

        )

    [key_alg] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => init_key_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_using_alg
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [normal_key_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => normal_key_opts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [fulltext_key_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fulltext_key_opts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [spatial_key_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => spatial_key_opts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [normal_key_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => normal_key_opt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => normal_key_opts
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => normal_key_opt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [spatial_key_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => spatial_key_opt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => spatial_key_opts
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => spatial_key_opt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [fulltext_key_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fulltext_key_opt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fulltext_key_opts
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => fulltext_key_opt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [key_using_alg] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => btree_or_rtree
                                            [action] =>  Lex->key_create_info.algorithm= $2; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TYPE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => btree_or_rtree
                                            [action] =>  Lex->key_create_info.algorithm= $2; 
                                        )

                                )

                        )

                )

        )

    [all_key_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KEY_BLOCK_SIZE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ulong_num
                                            [action] =>  Lex->key_create_info.block_size= $3; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->key_create_info.comment= $2; 
                                        )

                                )

                        )

                )

        )

    [normal_key_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => all_key_opt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_using_alg
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [spatial_key_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => all_key_opt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [fulltext_key_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => all_key_opt
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARSER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => IDENT_sys
                                            [action] => 
            LEX_CSTRING plugin_name= {$3.str, $3.length};
            if (plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= $3;
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [btree_or_rtree] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BTREE_SYM
                                            [action] =>  $$= HA_KEY_ALG_BTREE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RTREE_SYM
                                            [action] =>  $$= HA_KEY_ALG_RTREE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HASH_SYM
                                            [action] =>  $$= HA_KEY_ALG_HASH; 
                                        )

                                )

                        )

                )

        )

    [key_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => key_part
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => order_dir
                                            [action] =>  Lex->col_list.push_back($3); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_part
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => order_dir
                                            [action] =>  Lex->col_list.push_back($1); 
                                        )

                                )

                        )

                )

        )

    [key_part] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= new Key_part_spec($1, 0);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            int key_part_len= atoi($3.str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), $1.str);
            }
            $$= new Key_part_spec($1, (uint) key_part_len);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= null_lex_str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_ident
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_component] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= null_lex_str; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [string_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_string
                                            [action] =>  Lex->interval_list.push_back($1); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => string_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] =>  Lex->interval_list.push_back($3); 
                                        )

                                )

                        )

                )

        )

    [alter] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, $3, NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => alter_commands
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_empty
                                            [action] => 
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => create_database_options
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= $3;
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => UPGRADE_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => NAME_SYM
                                            [action] => 
            LEX *lex= Lex;
            push_deprecated_warn_no_replacement(YYTHD,
              "UPGRADE DATA DIRECTORY NAME");
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= $3;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_a_chistics
                                            [action] => 
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= $3;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_a_chistics
                                            [action] => 
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= $3;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => view_algorithm
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => definer_opt
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => view_tail
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => definer_opt
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => view_tail
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => definer_opt
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= $4;

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => ev_alter_on_schedule_completion
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_ev_rename_to
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_ev_status
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_ev_comment
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_ev_sql_stmt
                                            [action] => 
            if (!($6 || $7 || $8 || $9 || $10))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_tablespace_info
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGFILE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => alter_logfile_group_info
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => change_tablespace_info
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => change_tablespace_access
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SERVER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => OPTIONS_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => server_options_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= $3;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_user_command
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => require_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => connect_options
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_options
                                            [action] => 
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_user_command
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => user_func
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $2->auth.str= $5.str;
            $2->auth.length= $5.length;
            $2->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                )

        )

    [alter_user_command] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_account_lock_password_expire_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_account_lock_password_expire_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_account_lock_password_expire_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_account_lock_password_expire_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ACCOUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UNLOCK_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ACCOUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => password_expire
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => password_expire
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => DAY_SYM
                                            [action] => 
            LEX *lex=Lex;
            if ($3 == 0 || $3 > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", $3);
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= $3;
            lex->alter_password.use_default_password_lifetime= false;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => password_expire
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NEVER_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => password_expire
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->alter_password.update_password_expired_fields= true;
          
                                        )

                                )

                        )

                )

        )

    [password_expire] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EXPIRE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => clear_password_expire_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [connect_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => connect_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [connect_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => connect_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => connect_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => connect_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [connect_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_QUERIES_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.questions=$2;
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_UPDATES_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.updates=$2;
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_CONNECTIONS_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= $2;
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_USER_CONNECTIONS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.user_conn= $2;
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          
                                        )

                                )

                        )

                )

        )

    [user_func] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            $$= curr_user;
          
                                        )

                                )

                        )

                )

        )

    [ev_alter_on_schedule_completion] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SCHEDULE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ev_schedule_time
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ev_on_completion
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SCHEDULE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ev_schedule_time
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ev_on_completion
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                )

        )

    [opt_ev_rename_to] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RENAME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= $3;
            $$= 1;
          
                                        )

                                )

                        )

                )

        )

    [opt_ev_sql_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ev_sql_stmt
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                )

        )

    [ident_or_empty] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$.str= 0; $$.length= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [alter_commands] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISCARD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IMPORT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_partitioning
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => remove_partitioning
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => remove_partitioning
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => partitioning
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => add_partition_rule
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alt_part_name_list
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REBUILD_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= $3;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPTIMIZE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= $3;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ANALYZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= $3;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_mi_check_type
                                            [action] => 
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPAIR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= $3;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_mi_repair_type
                                            [action] => 
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COALESCE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= $3;
            lex->alter_info.num_parts= $4;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRUNCATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => reorg_partition_rule
                                            [action] => 
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXCHANGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alt_part_name_item
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_validation
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>($6->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>($6->table.str);
            lex->name.length= $6->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, $6, NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISCARD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IMPORT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_validation] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_opt_validation
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_opt_validation] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VALIDATION_SYM
                                            [action] => 
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITHOUT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VALIDATION_SYM
                                            [action] => 
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          
                                        )

                                )

                        )

                )

        )

    [remove_partitioning] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REMOVE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITIONING_SYM
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          
                                        )

                                )

                        )

                )

        )

    [all_or_alt_part_name_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alt_part_name_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [add_partition_rule] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= $3;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => add_part_extra
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [add_part_extra] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => part_def_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITIONS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            Lex->part_info->num_parts= $2;
          
                                        )

                                )

                        )

                )

        )

    [reorg_partition_rule] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REORGANIZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= $3;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => reorg_parts_rule
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [reorg_parts_rule] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alt_part_name_list
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => part_def_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          
                                        )

                                )

                        )

                )

        )

    [alt_part_name_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alt_part_name_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alt_part_name_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alt_part_name_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alt_part_name_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            String *s= new (YYTHD->mem_root) String((const char *) $1.str,
                                                    $1.length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [alter_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_list_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_list_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [add_column] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          
                                        )

                                )

                        )

                )

        )

    [alter_list_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => add_column
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => column_def
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_place
                                            [action] => 
            Lex->create_last_non_select_table= Lex->last_table();
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_def
                                            [action] => 
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => add_column
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => create_field_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANGE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            lex->change= $3.str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => field_spec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_place
                                            [action] => 
            Lex->create_last_non_select_table= Lex->last_table();
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MODIFY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->gcol_info= 0;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => field_def
                                            [action] => 
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&$3,
                                  (enum enum_field_types) $5,
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  $3.str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_place
                                            [action] => 
            Lex->create_last_non_select_table= Lex->last_table();
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_restrict
                                            [action] => 
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, $3.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOREIGN
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, $4.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PRIMARY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, $3.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISABLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEYS
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENABLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => KEYS
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => signed_literal
                                            [action] => 
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column($3.str,$6);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column($3.str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RENAME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_to
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>($3->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name($3->table.str,$3->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), $3->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), $3->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string($3->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>($3->table.str);
            lex->name.length= $3->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RENAME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => field_ident
                                            [action] => 
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key($3.str, $5.str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONVERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => charset_name_or_default
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_collate
                                            [action] => 
            if (!$4)
            {
              THD *thd= YYTHD;
              $4= thd->variables.collation_database;
            }
            $5= $5 ? $5 : $4;
            if (!my_charset_same($4,$5))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       $5->name, $4->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= $5;
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_table_options_space_separated
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORCE_SYM
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_order_clause
                                            [action] => 
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_algorithm_option
                                            [action] => 
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_lock_option
                                            [action] => 
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UPGRADE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PARTITIONING_SYM
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_UPGRADE_PARTITIONING;
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_opt_validation
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_index_lock_algorithm] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_lock_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_algorithm_option
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_lock_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => alter_algorithm_option
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_algorithm_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => alter_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_algorithm_option:
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            if (Lex->alter_info.set_requested_algorithm(&$3))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [alter_lock_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            if (Lex->alter_info.set_requested_lock(&$3))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [opt_column] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_ignore] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= false; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] =>  $$= true; 
                                        )

                                )

                        )

                )

        )

    [opt_restrict] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->drop_mode= DROP_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESTRICT
                                            [action] =>  Lex->drop_mode= DROP_RESTRICT; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASCADE
                                            [action] =>  Lex->drop_mode= DROP_CASCADE; 
                                        )

                                )

                        )

                )

        )

    [opt_place] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AFTER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            store_position_for_column($2.str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIRST_SYM
                                            [action] => 
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          
                                        )

                                )

                        )

                )

        )

    [opt_to] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [group_replication] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => START_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => GROUP_REPLICATION
                                            [action] => 
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STOP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => GROUP_REPLICATION
                                            [action] => 
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 
                                        )

                                )

                        )

                )

        )

    [slave] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_start
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => start_slave_opts
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STOP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_slave_thread_option_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= $3;
        
                                        )

                                )

                        )

                )

        )

    [slave_start] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => START_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_slave_thread_option_list
                                            [action] => 
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= $3;
          
                                        )

                                )

                        )

                )

        )

    [start_slave_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_until
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => slave_connection_opts
                                            [action] => 
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [start] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => START_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TRANSACTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_start_transaction_option_list
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (($3 & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ($3 & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_start_transaction_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => start_transaction_option_list
                                            [action] => 
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [start_transaction_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => start_transaction_option
                                            [action] => 
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => start_transaction_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => start_transaction_option
                                            [action] => 
            $$= $1 | $3;
          
                                        )

                                )

                        )

                )

        )

    [start_transaction_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CONSISTENT_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => SNAPSHOT_SYM
                                            [action] => 
            $$= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ONLY_SYM
                                            [action] => 
            $$= MYSQL_START_TRANS_OPT_READ_ONLY;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => WRITE_SYM
                                            [action] => 
            $$= MYSQL_START_TRANS_OPT_READ_WRITE;
          
                                        )

                                )

                        )

                )

        )

    [slave_connection_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_user_name_opt
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => slave_user_pass_opt
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => slave_plugin_auth_opt
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => slave_plugin_dir_opt
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [slave_user_name_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /* empty */
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->slave_connection.user= $3.str;
          
                                        )

                                )

                        )

                )

        )

    [slave_user_pass_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /* empty */
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->slave_connection.password= $3.str;
            Lex->contains_plaintext_password= true;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => slave_plugin_auth_opt:
                                            [action] => 
            /* empty */
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT_AUTH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->slave_connection.plugin_auth= $3.str;
          
                                        )

                                )

                        )

                )

        )

    [slave_plugin_dir_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /* empty */
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PLUGIN_DIR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->slave_connection.plugin_dir= $3.str;
          
                                        )

                                )

                        )

                )

        )

    [opt_slave_thread_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_thread_option_list
                                            [action] => 
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [slave_thread_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_thread_option
                                            [action] => 
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_thread_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => slave_thread_option
                                            [action] => 
            $$= $1 | $3;
          
                                        )

                                )

                        )

                )

        )

    [slave_thread_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_THREAD
                                            [action] => 
            $$= SLAVE_SQL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_THREAD
                                            [action] => 
            $$= SLAVE_IO;
          
                                        )

                                )

                        )

                )

        )

    [slave_until] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNTIL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => slave_until_opts
                                            [action] => 
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          
                                        )

                                )

                        )

                )

        )

    [slave_until_opts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_file_def
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => slave_until_opts
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => master_file_def
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_BEFORE_GTIDS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->mi.gtid= $3.str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_AFTER_GTIDS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->mi.gtid= $3.str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_AFTER_MTS_GAPS
                                            [action] => 
            Lex->mi.until_after_gaps= true;
          
                                        )

                                )

                        )

                )

        )

    [checksum] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECKSUM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_checksum_type
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_checksum_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->check_opt.flags= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUICK
                                            [action] =>  Lex->check_opt.flags= T_QUICK; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENDED_SYM
                                            [action] =>  Lex->check_opt.flags= T_EXTEND; 
                                        )

                                )

                        )

                )

        )

    [repair] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPAIR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= $2;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_mi_repair_type
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_mi_repair_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->check_opt.flags = T_MEDIUM; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_repair_types
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [mi_repair_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_repair_type
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_repair_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => mi_repair_types
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [mi_repair_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUICK
                                            [action] =>  Lex->check_opt.flags|= T_QUICK; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENDED_SYM
                                            [action] =>  Lex->check_opt.flags|= T_EXTEND; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USE_FRM
                                            [action] =>  Lex->check_opt.sql_flags|= TT_USEFRM; 
                                        )

                                )

                        )

                )

        )

    [analyze] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ANALYZE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= $2;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [binlog_base64_event] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINLOG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= $2;
          
                                        )

                                )

                        )

                )

        )

    [check] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_mi_check_type
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_mi_check_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->check_opt.flags = T_MEDIUM; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_check_types
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [mi_check_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_check_type
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => mi_check_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => mi_check_types
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [mi_check_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUICK
                                            [action] =>  Lex->check_opt.flags|= T_QUICK; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FAST_SYM
                                            [action] =>  Lex->check_opt.flags|= T_FAST; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEDIUM_SYM
                                            [action] =>  Lex->check_opt.flags|= T_MEDIUM; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENDED_SYM
                                            [action] =>  Lex->check_opt.flags|= T_EXTEND; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANGED
                                            [action] =>  Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UPGRADE_SYM
                                            [action] =>  Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; 
                                        )

                                )

                        )

                )

        )

    [optimize] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPTIMIZE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= $2;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_no_write_to_binlog] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_WRITE_TO_BINLOG
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                )

        )

    [rename] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RENAME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_to_table_list
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RENAME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => rename_list
                                            [action] => 
            Lex->sql_command = SQLCOM_RENAME_USER;
          
                                        )

                                )

                        )

                )

        )

    [rename_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
            if (Lex->users_list.push_back($1) || Lex->users_list.push_back($3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => rename_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => user
                                            [action] => 
            if (Lex->users_list.push_back($3) || Lex->users_list.push_back($5))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [table_to_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_to_table
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_to_table_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_to_table
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_to_table] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, $1,NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, $3,NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [keycache] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CACHE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
            Lex->alter_info.reset();
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => keycache_list_or_parts
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => key_cache_name
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= $6;
          
                                        )

                                )

                        )

                )

        )

    [keycache_list_or_parts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keycache_list
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => assign_to_keycache_parts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [keycache_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => assign_to_keycache
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keycache_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => assign_to_keycache
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [assign_to_keycache] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => cache_keys_spec
                                            [action] => 
            if (!Select->add_table_to_list(YYTHD, $1, NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           $2))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [assign_to_keycache_parts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => adm_partition
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => cache_keys_spec
                                            [action] => 
            if (!Select->add_table_to_list(YYTHD, $1, NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           $3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [key_cache_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$ = default_key_cache_base; 
                                        )

                                )

                        )

                )

        )

    [preload] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOAD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => CACHE_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => preload_list_or_parts
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [preload_list_or_parts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => preload_keys_parts
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => preload_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [preload_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => preload_keys
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => preload_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => preload_keys
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [preload_keys] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => cache_keys_spec
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ignore_leaves
                                            [action] => 
            if (!Select->add_table_to_list(YYTHD, $1, NULL, $3, TL_READ,
                                           MDL_SHARED_READ,
                                           $2))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [preload_keys_parts] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => adm_partition
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => cache_keys_spec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_ignore_leaves
                                            [action] => 
            if (!Select->add_table_to_list(YYTHD, $1, NULL, $4, TL_READ,
                                           MDL_SHARED_READ,
                                           $3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [adm_partition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_alt_part_name_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [cache_keys_spec] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => cache_key_list_or_empty
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [cache_key_list_or_empty] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_key_usage_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            init_index_hints($3, INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            $$= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_ignore_leaves] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LEAVES
                                            [action] =>  $$= TL_OPTION_IGNORE_LEAVES; 
                                        )

                                )

                        )

                )

        )

    [select] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_init
                                            [action] => 
            $$= NEW_PTN PT_select($1, SQLCOM_SELECT);
          
                                        )

                                )

                        )

                )

        )

    [select_init] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_part2
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_union_clause
                                            [action] => 
            $$= NEW_PTN PT_select_init2($1, $2, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_paren
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => union_opt
                                            [action] => 
            $$= NEW_PTN PT_select_init_parenthesis($2, $4);
          
                                        )

                                )

                        )

                )

        )

    [select_paren] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_part2
                                            [action] => 
            $$= NEW_PTN PT_select_paren($1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_paren
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [select_paren_derived] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_part2_derived
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_expression
                                            [action] => 
            $$= NEW_PTN PT_select_paren_derived($1, $2, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_paren_derived
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [select_part2] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_options_and_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_order_clause
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_select_lock_type
                                            [action] => 
            $$= NEW_PTN PT_select_part2($1, NULL, NULL, NULL, NULL, NULL,
                                        $2, $3, NULL, NULL, $4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_options_and_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => into
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_select_lock_type
                                            [action] => 
            $$= NEW_PTN PT_select_part2($1, $2, NULL, NULL, NULL, NULL, NULL,
                                        NULL, NULL, NULL, $3);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_options_and_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_into
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => from_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_group_clause
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_having_clause
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_order_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_procedure_analyse_clause
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => opt_into
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => opt_select_lock_type
                                            [action] => 
            if ($2 && $10)
            {
              /* double "INTO" clause */
              YYTHD->parse_error_at(@10, ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ($9 && ($2 || $10))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
            $$= NEW_PTN PT_select_part2($1, $2, $3, $4, $5, $6, $7, $8, $9, $10,
                                        $11);
          
                                        )

                                )

                        )

                )

        )

    [select_options_and_item_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
            $$= NEW_PTN PT_select_options_and_item_list($2, $3);
          
                                        )

                                )

                        )

                )

        )

    [table_expression] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_from_clause
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_group_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_having_clause
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_order_clause
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_procedure_analyse_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_select_lock_type
                                            [action] => 
            $$= NEW_PTN PT_table_expression($1, $2, $3, $4, $5, $6, $7, $8);
          
                                        )

                                )

                        )

                )

        )

    [from_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_reference_list
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [opt_from_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => from_clause
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_reference_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => join_table_list
                                            [action] => 
            $$= NEW_PTN PT_table_reference_list($1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DUAL_SYM
                                            [action] =>  $$= NULL; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => oracle
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => compatibility:
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => oracle
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => always
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => requires
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => clause,
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => DUAL
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => system
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => table
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => without
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => fields.
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => Is
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => "SELECT
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => 1
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => DUAL"
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => any
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => better
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => than
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => "SELECT
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => 1"
                                            [action] => 
                                        )

                                    [26] => Array
                                        (
                                            [id] => ?
                                            [action] => 
                                        )

                                    [27] => Array
                                        (
                                            [id] => Hmmm
                                            [action] => 
                                        )

                                    [28] => Array
                                        (
                                            [id] => :)
                                            [action] => 
                                        )

                                    [29] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [select_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.query_spec_options= 0;
            $$.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [select_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_option
                                            [action] => 
            if ($$.merge($1, $2))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [select_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_spec_option
                                            [action] => 
            $$.query_spec_options= $1;
            $$.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_NO_CACHE_SYM
                                            [action] => 
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            $$.query_spec_options= 0;
            $$.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_CACHE_SYM
                                            [action] => 
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            $$.query_spec_options= 0;
            $$.sql_cache= SELECT_LEX::SQL_CACHE;
          
                                        )

                                )

                        )

                )

        )

    [opt_select_lock_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$.is_set= false; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
            $$.is_set= true;
            $$.lock_type= TL_WRITE;
            $$.is_safe_to_cache_query= false;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => SHARE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => MODE_SYM
                                            [action] => 
            $$.is_set= true;
            $$.lock_type= TL_READ_WITH_SHARED_LOCKS;
            $$.is_safe_to_cache_query= false;
          
                                        )

                                )

                        )

                )

        )

    [select_item_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item
                                            [action] => 
            if ($1 == NULL || $1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_item
                                            [action] => 
            $$= NEW_PTN PT_select_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            Item *item= NEW_PTN Item_field(@$, NULL, NULL, "*");
            $$= NEW_PTN PT_select_item_list;
            if ($$ == NULL || $$->push_back(item))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [select_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_wild
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_alias
                                            [action] => 
            $$= NEW_PTN PTI_expr_with_alias(@$, $1, @1.cpp, $2);
          
                                        )

                                )

                        )

                )

        )

    [select_alias] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=null_lex_str;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$=$2; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  $$=$2; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                )

        )

    [optional_braces] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => or
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => OR_SYM
                                            [action] => 
            $$= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYTHD->mem_root, @$, $1, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => XOR
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => XOR
                                            [action] => 
            /* XOR is a proprietary extension */
            $$ = NEW_PTN Item_func_xor(@$, $1, $3);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
            $$= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYTHD->mem_root, @$, $1, $3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NOT_SYM
                                            [action] => 
            $$= NEW_PTN PTI_negate_expression(@$, $2);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TRUE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_istrue(@$, $1);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TRUE_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnottrue(@$, $1);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FALSE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isfalse(@$, $1);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FALSE_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnotfalse(@$, $1);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => UNKNOWN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnull(@$, $1);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => UNKNOWN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnotnull(@$, $1);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [bool_pri] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnull(@$, $1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => IS
                                            [action] => 
            $$= NEW_PTN Item_func_isnotnull(@$, $1);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => comp_op
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => predicate
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
            $$= NEW_PTN PTI_comp_op(@$, $1, $2, $3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bool_pri
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => comp_op
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => all_or_any
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => subselect
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
            if ($2 == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->parse_error_at(@2, ER_THD(YYTHD, ER_SYNTAX_ERROR));
            $$= NEW_PTN PTI_comp_op_all(@$, $1, $2, $3, $5);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => predicate
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [predicate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => subselect
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_in_subselect(@$, $1, $4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => subselect
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            Item *item= NEW_PTN Item_in_subselect(@$, $1, $5);
            $$= NEW_PTN PTI_negate_expression(@$, item);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_handle_sql2003_note184_exception(@$, $1, true, $4);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            if ($6 == NULL || $6->push_front($4) || $6->push_front($1))
              MYSQL_YYABORT;

            $$= NEW_PTN Item_func_in(@$, $6, false);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_handle_sql2003_note184_exception(@$, $1, false, $5);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            if ($7 == NULL || $7->push_front($5) || $7->value.push_front($1))
              MYSQL_YYABORT;

            $$= NEW_PTN Item_func_in(@$, $7, true);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BETWEEN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => predicate
                                            [action] => 
            $$= NEW_PTN Item_func_between(@$, $1, $3, $5, false);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BETWEEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => predicate
                                            [action] => 
            $$= NEW_PTN Item_func_between(@$, $1, $4, $6, true);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SOUNDS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            Item *item1= NEW_PTN Item_func_soundex(@$, $1);
            Item *item4= NEW_PTN Item_func_soundex(@$, $4);
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            $$= NEW_PTN Item_func_eq(@$, item1, item4);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_escape
                                            [action] => 
            $$= NEW_PTN Item_func_like(@$, $1, $3, $4);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_escape
                                            [action] => 
            Item *item= NEW_PTN Item_func_like(@$, $1, $4, $5);
            if (item == NULL)
              MYSQL_YYABORT;
            $$= NEW_PTN Item_func_not(@$, item);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => REGEXP
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            $$= NEW_PTN Item_func_regex(@$, $1, $3);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => REGEXP
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            Item *item= NEW_PTN Item_func_regex(@$, $1, $4);
            $$= NEW_PTN PTI_negate_expression(@$, item);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [bit_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '
                                            [action] => 
            $$= NEW_PTN Item_func_bit_or(@$, $1, $3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '&'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '&'
                                            [action] => 
            $$= NEW_PTN Item_func_bit_and(@$, $1, $3);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SHIFT_LEFT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => SHIFT_LEFT
                                            [action] => 
            $$= NEW_PTN Item_func_shift_left(@$, $1, $3);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SHIFT_RIGHT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => SHIFT_RIGHT
                                            [action] => 
            $$= NEW_PTN Item_func_shift_right(@$, $1, $3);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
            $$= NEW_PTN Item_func_plus(@$, $1, $3);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
            $$= NEW_PTN Item_func_minus(@$, $1, $3);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $1, $4, $5, 0);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $1, $4, $5, 1);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            $$= NEW_PTN Item_func_mul(@$, $1, $3);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '/'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '/'
                                            [action] => 
            $$= NEW_PTN Item_func_div(@$, $1,$3);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '%'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '%'
                                            [action] => 
            $$= NEW_PTN Item_func_mod(@$, $1,$3);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DIV_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => DIV_SYM
                                            [action] => 
            $$= NEW_PTN Item_func_int_div(@$, $1,$3);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => MOD_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => MOD_SYM
                                            [action] => 
            $$= NEW_PTN Item_func_mod(@$, $1, $3);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '^'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
            $$= NEW_PTN Item_func_bit_xor(@$, $1, $3);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [or] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OR2_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [and] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AND_AND_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [not] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOT2_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [not2] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '!'
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NOT2_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [comp_op] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQ
                                            [action] =>  $$ = &comp_eq_creator; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQUAL_SYM
                                            [action] =>  $$ = &comp_equal_creator; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GE
                                            [action] =>  $$ = &comp_ge_creator; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GT_SYM
                                            [action] =>  $$ = &comp_gt_creator; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LE
                                            [action] =>  $$ = &comp_le_creator; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LT
                                            [action] =>  $$ = &comp_lt_creator; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NE
                                            [action] =>  $$ = &comp_ne_creator; 
                                        )

                                )

                        )

                )

        )

    [all_or_any] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] =>  $$ = 1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ANY_SYM
                                            [action] =>  $$ = 0; 
                                        )

                                )

                        )

                )

        )

    [simple_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => function_call_keyword
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => function_call_nonkeyword
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => function_call_generic
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => function_call_conflict
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COLLATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= NEW_PTN Item_func_set_collation(@$, $1, $3);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => literal
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => param_marker
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => variable
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sum_expr
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => OR_OR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
            $$= NEW_PTN Item_func_concat(@$, $1, $3);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= $2; // TODO: do we really want to ignore unary '+' before any kind of literals?
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= NEW_PTN Item_func_neg(@$, $2);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '~'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= NEW_PTN Item_func_bit_neg(@$, $2);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => not2
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= NEW_PTN PTI_negate_expression(@$, $2);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => subselect
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_singlerow_subselect(@$, $2);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_row(@$, $2, $4->value);
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_row(@$, $3, $5->value);
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXISTS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => subselect
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_exists_subselect(@$, $3);
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '
                                            [action] => ' ident expr '
                                        )

                                    [1] => Array
                                        (
                                            [id] => '
                                            [action] => 
            $$= NEW_PTN PTI_odbc_date(@$, $2, $3);
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MATCH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_list_arg
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => AGAINST
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => fulltext_options
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_match(@$, $2, $5, $6);
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => NEG
                                            [action] => 
            $$= create_func_cast(YYTHD, @2, $2, ITEM_CAST_CHAR, &my_charset_bin);
          
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CAST_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => cast_type
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= create_func_cast(YYTHD, @3, $3, &$5);
          
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => when_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_else
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => END
                                            [action] => 
            $$= NEW_PTN Item_func_case(@$, *$3, $2, $4 );
          
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONVERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => cast_type
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= create_func_cast(YYTHD, @3, $3, &$5);
          
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONVERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => charset_name
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_conv_charset(@$, $3,$5);
          
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_default_value(@$, $3);
          
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_insert_value(@$, $3);
          
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $5, $2, $3, 0);
          
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => JSON_SEPARATOR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEXT_STRING_literal
                                            [action] => 
            Item_string *path=
              NEW_PTN Item_string(@$, $3.str, $3.length,
                                  YYTHD->variables.collation_connection);
            $$= NEW_PTN Item_func_json_extract(YYTHD, @$, $1, path);
          
                                        )

                                )

                        )

                )

        )

    [function_call_keyword] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_char(@$, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => charset_name
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_char(@$, $3, $5);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURRENT_USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => optional_braces
                                            [action] => 
            $$= NEW_PTN Item_func_current_user(@$);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_typecast(@$, $3);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_dayofmonth(@$, $3);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_hour(@$, $3);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_insert(@$, $3, $5, $7, $9);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
            $$= NEW_PTN Item_func_interval(@$, YYTHD->mem_root, $3, $5);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
            $$= NEW_PTN Item_func_interval(@$, YYTHD->mem_root, $3, $5, $7);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEFT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_left(@$, $3, $5);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MINUTE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_minute(@$, $3);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MONTH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_month(@$, $3);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RIGHT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_right(@$, $3, $5);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SECOND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_second(@$, $3);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_time_typecast(@$, $3);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_datetime_typecast(@$, $3);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_add_time(@$, $3, $5, 1, 0);
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $3,
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LEADING
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $6, $4,
                                       Item_func_trim::TRIM_LEADING);
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TRAILING
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $6, $4,
                                       Item_func_trim::TRIM_TRAILING);
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BOTH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $6, $4, Item_func_trim::TRIM_BOTH);
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LEADING
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $5, Item_func_trim::TRIM_LEADING);
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TRAILING
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $5, Item_func_trim::TRIM_TRAILING);
          
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BOTH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $5, Item_func_trim::TRIM_BOTH);
          
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_trim(@$, $5, $3,
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_user(@$);
          
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => YEAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_year(@$, $3);
          
                                        )

                                )

                        )

                )

        )

    [function_call_nonkeyword] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADDDATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $5, INTERVAL_DAY, 0);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADDDATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $6, $7, 0);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURDATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => optional_braces
                                            [action] => 
            $$= NEW_PTN Item_func_curdate_local(@$);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURTIME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => func_datetime_precision
                                            [action] => 
            $$= NEW_PTN Item_func_curtime_local(@$, static_cast<uint8>($2));
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_ADD_INTERVAL
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $6, $7, 0);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SUB_INTERVAL
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $6, $7, 1);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTRACT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_extract(@$,  $3, $5);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GET_FORMAT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => date_time_type
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_get_format(@$, $3, $5);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => now
                                            [action] => 
            $$= NEW_PTN PTI_function_call_nonkeyword_now(@$,
              static_cast<uint8>($1));
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POSITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => bit_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_locate(@$, $5,$3);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBDATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $5, INTERVAL_DAY, 1);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBDATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => INTERVAL_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => interval
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $3, $6, $7, 1);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBSTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_substr(@$, $3,$5,$7);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBSTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_substr(@$, $3,$5);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBSTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_substr(@$, $3,$5,$7);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBSTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_substr(@$, $3,$5);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SYSDATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => func_datetime_precision
                                            [action] => 
            $$= NEW_PTN PTI_function_call_nonkeyword_sysdate(@$,
              static_cast<uint8>($2));
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP_ADD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => interval_time_stamp
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_date_add_interval(@$, $7, $5, $3, 0);
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP_DIFF
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => interval_time_stamp
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_timestamp_diff(@$, $5,$7,$3);
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UTC_DATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => optional_braces
                                            [action] => 
            $$= NEW_PTN Item_func_curdate_utc(@$);
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UTC_TIME_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => func_datetime_precision
                                            [action] => 
            $$= NEW_PTN Item_func_curtime_utc(@$, static_cast<uint8>($2));
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UTC_TIMESTAMP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => func_datetime_precision
                                            [action] => 
            $$= NEW_PTN Item_func_now_utc(@$, static_cast<uint8>($2));
          
                                        )

                                )

                        )

                )

        )

    [function_call_conflict] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASCII_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_ascii(@$, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHARSET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_charset(@$, $3);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COALESCE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_coalesce(@$, $3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_collation(@$, $3);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_database(@$);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IF
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_if(@$, $3,$5,$7);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_format(@$, $3, $5);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_format(@$, $3, $5, $7);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MICROSECOND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_microsecond(@$, $3);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MOD_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_mod(@$, $3, $5);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_password(@$, $3);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUARTER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_quarter(@$, $3);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPEAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_repeat(@$, $3,$5);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLACE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_replace(@$, $3,$5,$7);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REVERSE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_reverse(@$, $3);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_row_count(@$);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRUNCATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_round(@$, $3,$5,1);
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEEK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_week(@$, $3, NULL);
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEEK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_week(@$, $3, $5);
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEIGHT_STRING_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_ws_levels
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_weight_string(@$, $3, 0, 0, $4);
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEIGHT_STRING_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ws_nweights
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_ws_levels
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_weight_string(@$, $3, 0, $6,
                        $7 | MY_STRXFRM_PAD_WITH_SPACE);
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEIGHT_STRING_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ws_nweights
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_weight_string(@$,
                        $3, 0, $6, MY_STRXFRM_PAD_WITH_SPACE, true);
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEIGHT_STRING_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_weight_string(@$, $3, $5, $7, $9);
          
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => geometry_function
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [geometry_function] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTAINS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            push_deprecated_warn(YYTHD, "CONTAINS", "MBRCONTAINS");
            $$= NEW_PTN Item_func_spatial_mbr_rel(@$, $3, $5,
                        Item_func::SP_CONTAINS_FUNC);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GEOMETRYCOLLECTION
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINESTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTILINESTRING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOINT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOLYGON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POINT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_point(@$, $3,$5);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POLYGON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_spatial_collection(@$, $3,
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          
                                        )

                                )

                        )

                )

        )

    [function_call_generic] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT_sys
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_udf_expr_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_function_call_generic_ident_sys(@1, $1, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_expr_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_function_call_generic_2d(@$, $1, $3, $5);
          
                                        )

                                )

                        )

                )

        )

    [fulltext_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_natural_language_mode
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_query_expansion
                                            [action] =>  $$= $1 | $2; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BOOLEAN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => MODE_SYM
                                            [action] =>  $$= FT_BOOL; 
                                        )

                                )

                        )

                )

        )

    [opt_natural_language_mode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= FT_NL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NATURAL
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LANGUAGE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => MODE_SYM
                                            [action] =>  $$= FT_NL; 
                                        )

                                )

                        )

                )

        )

    [opt_query_expansion] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0;         
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => EXPANSION_SYM
                                            [action] =>  $$= FT_EXPAND; 
                                        )

                                )

                        )

                )

        )

    [opt_udf_expr_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => udf_expr_list
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [udf_expr_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => udf_expr
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => udf_expr_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => udf_expr
                                            [action] => 
            if ($1 == NULL || $1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [udf_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_alias
                                            [action] => 
            $$= NEW_PTN PTI_udf_expr(@$, $1, $2, @1.cpp);
          
                                        )

                                )

                        )

                )

        )

    [sum_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AVG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_avg(@$, $3, FALSE);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AVG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_avg(@$, $4, TRUE);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_AND
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_and(@$, $3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_OR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_or(@$, $3);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_XOR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_xor(@$, $3);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_all
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PTI_count_sym(@$);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_count(@$, $3);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= new Item_sum_count(@$, $4);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_min(@$, $3);
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => According
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => to
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ANSI
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => SQL,
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => allowed
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => has
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => no
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => sense
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => inside
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => MIN
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => MAX
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => grouping
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => functions;
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => so
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => MIN
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX(DISTINCT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ...)
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => processed
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => like
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => an
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ordinary
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => MIN
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX()
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_min(@$, $4);
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_max(@$, $3);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_max(@$, $4);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STD_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_std(@$, $3, 0);
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VARIANCE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_variance(@$, $3, 0);
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STDDEV_SAMP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_std(@$, $3, 1);
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VAR_SAMP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_variance(@$, $3, 1);
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_sum(@$, $3, FALSE);
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => in_sum_expr
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_sum_sum(@$, $4, TRUE);
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GROUP_CONCAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_distinct
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_gorder_clause
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_gconcat_separator
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN Item_func_group_concat(@$, $3, $4, $5, $6);
          
                                        )

                                )

                        )

                )

        )

    [variable] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => variable_aux
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [variable_aux] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SET_VAR
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PTI_variable_aux_set_var(@$, $1, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= NEW_PTN PTI_variable_aux_ident_or_text(@$, $1);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_var_ident_type
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_component
                                            [action] => 
            $$= NEW_PTN PTI_variable_aux_3d(@$, $2, $3, @3, $4);
          
                                        )

                                )

                        )

                )

        )

    [opt_distinct] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$ = 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] =>  $$ = 1; 
                                        )

                                )

                        )

                )

        )

    [opt_gconcat_separator] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SEPARATOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => text_string
                                            [action] =>  $$ = $2; 
                                        )

                                )

                        )

                )

        )

    [opt_gorder_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ORDER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => gorder_list
                                            [action] =>  $$= $3; 
                                        )

                                )

                        )

                )

        )

    [gorder_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => gorder_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $$= NEW_PTN PT_gorder_list();
            if ($1 == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                )

        )

    [in_sum_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_all
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PTI_in_sum_expr(@1, $2);
          
                                        )

                                )

                        )

                )

        )

    [cast_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
            $$.target= ITEM_CAST_CHAR;
            $$.charset= &my_charset_bin;
            $$.type_flags= 0;
            $$.length= $2;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_binary
                                            [action] => 
            $$.target= ITEM_CAST_CHAR;
            $$.charset= $3.charset;
            $$.type_flags= $3.type_flags;
            $$.length= $2;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_field_length
                                            [action] => 
            $$.target= ITEM_CAST_CHAR;
            $$.charset= national_charset_info;
            $$.type_flags= 0;
            $$.length= $2;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIGNED_SYM
                                            [action] => 
            $$.target= ITEM_CAST_SIGNED_INT;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIGNED_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INT_SYM
                                            [action] => 
            $$.target= ITEM_CAST_SIGNED_INT;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNSIGNED
                                            [action] => 
            $$.target= ITEM_CAST_UNSIGNED_INT;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNSIGNED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INT_SYM
                                            [action] => 
            $$.target= ITEM_CAST_UNSIGNED_INT;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] => 
            $$.target= ITEM_CAST_DATE;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => type_datetime_precision
                                            [action] => 
            $$.target= ITEM_CAST_TIME;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= $2;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATETIME
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => type_datetime_precision
                                            [action] => 
            $$.target= ITEM_CAST_DATETIME;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= $2;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => float_options
                                            [action] => 
            $$.target=ITEM_CAST_DECIMAL;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= $2.length;
            $$.dec= $2.dec;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => JSON_SYM
                                            [action] => 
            $$.target=ITEM_CAST_JSON;
            $$.charset= NULL;
            $$.type_flags= 0;
            $$.length= NULL;
            $$.dec= NULL;
          
                                        )

                                )

                        )

                )

        )

    [opt_expr_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [expr_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            if ($1 == NULL || $1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [ident_list_arg] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_list
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [ident_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => simple_ident
                                            [action] => 
            if ($1 == NULL || $1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [opt_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_else] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ELSE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [when_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHEN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => THEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= new List<Item>;
            if ($$ == NULL)
              MYSQL_YYABORT;
            $$->push_back($2);
            $$->push_back($4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => when_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => WHEN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => THEN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $1->push_back($3);
            $1->push_back($5);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [table_ref] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => join_table
                                            [action] => 
            $$= NEW_PTN PT_table_ref_join_table($1);
          
                                        )

                                )

                        )

                )

        )

    [join_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => derived_table_list
                                            [action] => 
            $$= NEW_PTN PT_join_table_list(@$, $1);
          
                                        )

                                )

                        )

                )

        )

    [esc_table_ref] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '
                                            [action] => ' ident table_ref '
                                        )

                                    [1] => Array
                                        (
                                            [id] => '
                                            [action] =>  $$= $3; 
                                        )

                                )

                        )

                )

        )

    [derived_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => esc_table_ref
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => derived_table_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => esc_table_ref
                                            [action] => 
            $$= NEW_PTN PT_derived_table_list(@$, $1, $3);
          
                                        )

                                )

                        )

                )

        )

    [join_table] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => normal_join
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => %prec
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TABLE_REF_PRIORITY
                                            [action] => 
            $$= NEW_PTN PT_join_table<JTT_NORMAL>($1, @2, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STRAIGHT_JOIN
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
            $$= NEW_PTN PT_join_table<JTT_STRAIGHT>($1, @2, $3);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => normal_join
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_join_table_on<JTT_NORMAL>($1, @2, $3, $5);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STRAIGHT_JOIN
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_join_table_on<JTT_STRAIGHT>($1, @2, $3, $5);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => normal_join
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => using_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PT_join_table_using<JTT_NORMAL>($1, @2, $3, $6);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NATURAL
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
            $$= NEW_PTN PT_join_table<JTT_NATURAL>($1, @2, $4);
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => LEFT
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => JOIN
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => variants
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LEFT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_join_table_on<JTT_LEFT>($1, @2, $5, $7);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LEFT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => using_list
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PT_join_table_using<JTT_LEFT>($1, @2, $5, $8);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NATURAL
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LEFT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
            $$= NEW_PTN PT_join_table<JTT_NATURAL_LEFT>($1, @2, $6);
          
                                        )

                                    [6] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => RIGHT
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => JOIN
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => variants
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => RIGHT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_join_table_on<JTT_RIGHT>($1, @2, $5, $7);
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => RIGHT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => using_list
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PT_join_table_using<JTT_RIGHT>($1, @2, $5, $8);
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ref
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NATURAL
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => RIGHT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_outer
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => table_factor
                                            [action] => 
            $$= NEW_PTN PT_join_table<JTT_NATURAL_RIGHT>($1, @2, $6);
          
                                        )

                                )

                        )

                )

        )

    [normal_join] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INNER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CROSS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_use_partition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => use_partition
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [use_partition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => using_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= $3;
          
                                        )

                                )

                        )

                )

        )

    [table_factor] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_table_alias
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_key_definition
                                            [action] => 
            $$= NEW_PTN PT_table_factor_table_ident($1, $2, $3, $4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_expression
                                            [action] => 
            $$= NEW_PTN PT_table_factor_select_sym(@$, $1, $2, $3, $4);
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => Represents
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => a
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => flattening
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => of
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => following
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => rules
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => from
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => SQL:2003
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => standard.
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => This
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => sub-rule
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => corresponds
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => to
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => sub-rule
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => <table
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => primary>
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => ::=
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => ...
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => <derived
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table>
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => [
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ]
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => <correlation
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => name>
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => The
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => following
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => rules
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => have
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => been
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => flattened
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => into
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => query_expression_body
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => (since
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => we
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => have
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => no
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => <with
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => clause>).
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => <derived
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => table>
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => ::=
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => <table
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => subquery>
                                            [action] => 
                                        )

                                    [26] => Array
                                        (
                                            [id] => <table
                                            [action] => 
                                        )

                                    [27] => Array
                                        (
                                            [id] => subquery>
                                            [action] => 
                                        )

                                    [28] => Array
                                        (
                                            [id] => ::=
                                            [action] => 
                                        )

                                    [29] => Array
                                        (
                                            [id] => <subquery>
                                            [action] => 
                                        )

                                    [30] => Array
                                        (
                                            [id] => <subquery>
                                            [action] => 
                                        )

                                    [31] => Array
                                        (
                                            [id] => ::=
                                            [action] => 
                                        )

                                    [32] => Array
                                        (
                                            [id] => <left
                                            [action] => 
                                        )

                                    [33] => Array
                                        (
                                            [id] => paren>
                                            [action] => 
                                        )

                                    [34] => Array
                                        (
                                            [id] => <query
                                            [action] => 
                                        )

                                    [35] => Array
                                        (
                                            [id] => expression>
                                            [action] => 
                                        )

                                    [36] => Array
                                        (
                                            [id] => <right
                                            [action] => 
                                        )

                                    [37] => Array
                                        (
                                            [id] => paren>
                                            [action] => 
                                        )

                                    [38] => Array
                                        (
                                            [id] => <query
                                            [action] => 
                                        )

                                    [39] => Array
                                        (
                                            [id] => expression>
                                            [action] => 
                                        )

                                    [40] => Array
                                        (
                                            [id] => ::=
                                            [action] => 
                                        )

                                    [41] => Array
                                        (
                                            [id] => [
                                            [action] => 
                                        )

                                    [42] => Array
                                        (
                                            [id] => <with
                                            [action] => 
                                        )

                                    [43] => Array
                                        (
                                            [id] => clause>
                                            [action] => 
                                        )

                                    [44] => Array
                                        (
                                            [id] => ]
                                            [action] => 
                                        )

                                    [45] => Array
                                        (
                                            [id] => <query
                                            [action] => 
                                        )

                                    [46] => Array
                                        (
                                            [id] => expression
                                            [action] => 
                                        )

                                    [47] => Array
                                        (
                                            [id] => body>
                                            [action] => 
                                        )

                                    [48] => Array
                                        (
                                            [id] => For
                                            [action] => 
                                        )

                                    [49] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [50] => Array
                                        (
                                            [id] => time
                                            [action] => 
                                        )

                                    [51] => Array
                                        (
                                            [id] => being
                                            [action] => 
                                        )

                                    [52] => Array
                                        (
                                            [id] => we
                                            [action] => 
                                        )

                                    [53] => Array
                                        (
                                            [id] => use
                                            [action] => 
                                        )

                                    [54] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [55] => Array
                                        (
                                            [id] => non-standard
                                            [action] => 
                                        )

                                    [56] => Array
                                        (
                                            [id] => rule
                                            [action] => 
                                        )

                                    [57] => Array
                                        (
                                            [id] => select_derived_union
                                            [action] => 
                                        )

                                    [58] => Array
                                        (
                                            [id] => which
                                            [action] => 
                                        )

                                    [59] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [60] => Array
                                        (
                                            [id] => a
                                            [action] => 
                                        )

                                    [61] => Array
                                        (
                                            [id] => compromise
                                            [action] => 
                                        )

                                    [62] => Array
                                        (
                                            [id] => between
                                            [action] => 
                                        )

                                    [63] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [64] => Array
                                        (
                                            [id] => standard
                                            [action] => 
                                        )

                                    [65] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [66] => Array
                                        (
                                            [id] => our
                                            [action] => 
                                        )

                                    [67] => Array
                                        (
                                            [id] => parser.
                                            [action] => 
                                        )

                                    [68] => Array
                                        (
                                            [id] => Possibly
                                            [action] => 
                                        )

                                    [69] => Array
                                        (
                                            [id] => this
                                            [action] => 
                                        )

                                    [70] => Array
                                        (
                                            [id] => rule
                                            [action] => 
                                        )

                                    [71] => Array
                                        (
                                            [id] => could
                                            [action] => 
                                        )

                                    [72] => Array
                                        (
                                            [id] => be
                                            [action] => 
                                        )

                                    [73] => Array
                                        (
                                            [id] => replaced
                                            [action] => 
                                        )

                                    [74] => Array
                                        (
                                            [id] => by
                                            [action] => 
                                        )

                                    [75] => Array
                                        (
                                            [id] => our
                                            [action] => 
                                        )

                                    [76] => Array
                                        (
                                            [id] => query_expression_body.
                                            [action] => 
                                        )

                                    [77] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_derived_union
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_table_alias
                                            [action] => 
            $$= NEW_PTN PT_table_factor_parenthesis($2, $4, @4);
          
                                        )

                                )

                        )

                )

        )

    [select_derived_union] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_derived
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_union_order_or_limit
                                            [action] => 
            $$= NEW_PTN PT_select_derived_union_select($1, $2, @2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_derived_union
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UNION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => union_option
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => query_specification
                                            [action] => 
            $$= NEW_PTN PT_select_derived_union_union($1, @2, $3, $4);
          
                                        )

                                )

                        )

                )

        )

    [select_part2_derived] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_query_spec_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
            $$= NEW_PTN PT_select_part2_derived($2, $3);
          
                                        )

                                )

                        )

                )

        )

    [select_derived] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => derived_table_list
                                            [action] => 
            $$= NEW_PTN PT_select_derived(@1, $1);
          
                                        )

                                )

                        )

                )

        )

    [opt_outer] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OUTER
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [index_hint_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] =>  $$= INDEX_HINT_MASK_JOIN;  
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ORDER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] =>  $$= INDEX_HINT_MASK_ORDER; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] =>  $$= INDEX_HINT_MASK_GROUP; 
                                        )

                                )

                        )

                )

        )

    [index_hint_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORCE_SYM
                                            [action] =>  $$= INDEX_HINT_FORCE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] =>  $$= INDEX_HINT_IGNORE; 
                                        )

                                )

                        )

                )

        )

    [index_hint_definition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => index_hint_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => index_hint_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => key_usage_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            init_index_hints($5, $1, $3);
            $$= $5;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => key_or_index
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => index_hint_clause
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_key_usage_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            init_index_hints($5, INDEX_HINT_USE, $3);
            $$= $5;
          
                                        )

                                )

                        )

                )

        )

    [index_hints_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => index_hint_definition
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => index_hints_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => index_hint_definition
                                            [action] => 
            $2->concat($1);
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [opt_index_hints_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => index_hints_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_key_definition] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_index_hints_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_key_usage_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Index_hint>;
            Index_hint *hint= new (YYTHD->mem_root) Index_hint(NULL, 0);
            if ($$ == NULL || hint == NULL || $$->push_front(hint))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_usage_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [key_usage_element] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= new (YYTHD->mem_root) Index_hint($1.str, $1.length);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIMARY_SYM
                                            [action] => 
            $$= new (YYTHD->mem_root) Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [key_usage_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_usage_element
                                            [action] => 
            $$= new (YYTHD->mem_root) List<Index_hint>;
            if ($$ == NULL || $$->push_front($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => key_usage_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => key_usage_element
                                            [action] => 
            if ($$->push_front($3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [using_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            if (!($$= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) $1.str,
                                                    $1.length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            $$->push_back(s);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => using_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            String *s= new (YYTHD->mem_root) String((const char *) $3.str,
                                                    $3.length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            $1->push_back(s);
            $$= $1;
          
                                        )

                                )

                        )

                )

        )

    [interval] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => interval_time_stamp
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_HOUR_SYM
                                            [action] =>  $$=INTERVAL_DAY_HOUR; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_MICROSECOND_SYM
                                            [action] =>  $$=INTERVAL_DAY_MICROSECOND; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_MINUTE_SYM
                                            [action] =>  $$=INTERVAL_DAY_MINUTE; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_SECOND_SYM
                                            [action] =>  $$=INTERVAL_DAY_SECOND; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_MICROSECOND_SYM
                                            [action] =>  $$=INTERVAL_HOUR_MICROSECOND; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_MINUTE_SYM
                                            [action] =>  $$=INTERVAL_HOUR_MINUTE; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_SECOND_SYM
                                            [action] =>  $$=INTERVAL_HOUR_SECOND; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MINUTE_MICROSECOND_SYM
                                            [action] =>  $$=INTERVAL_MINUTE_MICROSECOND; 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MINUTE_SECOND_SYM
                                            [action] =>  $$=INTERVAL_MINUTE_SECOND; 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SECOND_MICROSECOND_SYM
                                            [action] =>  $$=INTERVAL_SECOND_MICROSECOND; 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => YEAR_MONTH_SYM
                                            [action] =>  $$=INTERVAL_YEAR_MONTH; 
                                        )

                                )

                        )

                )

        )

    [interval_time_stamp] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_SYM
                                            [action] =>  $$=INTERVAL_DAY; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEEK_SYM
                                            [action] =>  $$=INTERVAL_WEEK; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_SYM
                                            [action] =>  $$=INTERVAL_HOUR; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MINUTE_SYM
                                            [action] =>  $$=INTERVAL_MINUTE; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MONTH_SYM
                                            [action] =>  $$=INTERVAL_MONTH; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUARTER_SYM
                                            [action] =>  $$=INTERVAL_QUARTER; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SECOND_SYM
                                            [action] =>  $$=INTERVAL_SECOND; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MICROSECOND_SYM
                                            [action] =>  $$=INTERVAL_MICROSECOND; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => YEAR_SYM
                                            [action] =>  $$=INTERVAL_YEAR; 
                                        )

                                )

                        )

                )

        )

    [date_time_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] => $$= MYSQL_TIMESTAMP_DATE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => $$= MYSQL_TIMESTAMP_TIME; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => $$= MYSQL_TIMESTAMP_DATETIME; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATETIME
                                            [action] => $$= MYSQL_TIMESTAMP_DATETIME; 
                                        )

                                )

                        )

                )

        )

    [table_alias] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_table_alias] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_alias
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= (LEX_STRING*) sql_memdup(&$2,sizeof(LEX_STRING));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_all] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_where_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHERE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= new PTI_context<CTX_WHERE>(@$, $2);
          
                                        )

                                )

                        )

                )

        )

    [opt_having_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HAVING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= new PTI_context<CTX_HAVING>(@$, $2);
          
                                        )

                                )

                        )

                )

        )

    [opt_escape] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ESCAPE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => simple_expr
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => empty
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => */
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                )

        )

    [opt_group_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => group_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => olap_opt
                                            [action] => 
            $$= NEW_PTN PT_group($3, $4);
          
                                        )

                                )

                        )

                )

        )

    [group_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => group_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $$= NEW_PTN PT_order_list();
            if ($1 == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                )

        )

    [olap_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= UNSPECIFIED_OLAP_TYPE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH_CUBE_SYM
                                            [action] =>  $$= CUBE_TYPE; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => 'WITH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => CUBE'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => reserved
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => in
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => the
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => MySQL
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => syntax,
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => but
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => implemented,
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => cause
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => LALR(2)
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => conflicts.
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => This
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => syntax
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => standard.
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => MySQL
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => syntax:
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => GROUP
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [26] => Array
                                        (
                                            [id] => col1,
                                            [action] => 
                                        )

                                    [27] => Array
                                        (
                                            [id] => col2,
                                            [action] => 
                                        )

                                    [28] => Array
                                        (
                                            [id] => col3
                                            [action] => 
                                        )

                                    [29] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [30] => Array
                                        (
                                            [id] => CUBE
                                            [action] => 
                                        )

                                    [31] => Array
                                        (
                                            [id] => SQL-2003:
                                            [action] => 
                                        )

                                    [32] => Array
                                        (
                                            [id] => GROUP
                                            [action] => 
                                        )

                                    [33] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [34] => Array
                                        (
                                            [id] => ...
                                            [action] => 
                                        )

                                    [35] => Array
                                        (
                                            [id] => CUBE(col1,
                                            [action] => 
                                        )

                                    [36] => Array
                                        (
                                            [id] => col2,
                                            [action] => 
                                        )

                                    [37] => Array
                                        (
                                            [id] => col3)
                                            [action] => 
                                        )

                                    [38] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH_ROLLUP_SYM
                                            [action] =>  $$= ROLLUP_TYPE; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => 'WITH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ROLLUP'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => needed
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => for
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => backward
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => compatibility,
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => and
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => cause
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => LALR(2)
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => conflicts.
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => This
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => syntax
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => is
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => standard.
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => MySQL
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => syntax:
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => GROUP
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => col1,
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => col2,
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => col3
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [26] => Array
                                        (
                                            [id] => ROLLUP
                                            [action] => 
                                        )

                                    [27] => Array
                                        (
                                            [id] => SQL-2003:
                                            [action] => 
                                        )

                                    [28] => Array
                                        (
                                            [id] => GROUP
                                            [action] => 
                                        )

                                    [29] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [30] => Array
                                        (
                                            [id] => ...
                                            [action] => 
                                        )

                                    [31] => Array
                                        (
                                            [id] => ROLLUP(col1,
                                            [action] => 
                                        )

                                    [32] => Array
                                        (
                                            [id] => col2,
                                            [action] => 
                                        )

                                    [33] => Array
                                        (
                                            [id] => col3)
                                            [action] => 
                                        )

                                    [34] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_order_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ORDER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_order_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_order_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_order_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => alter_order_item
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => alter_order_item
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [alter_order_item] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => order_dir
                                            [action] => 
            ITEMIZE($1, &$1);

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= $1;
            order->direction= ($2 == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            add_order_to_list(thd, order);
          
                                        )

                                )

                        )

                )

        )

    [opt_order_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_clause
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [order_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ORDER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => order_list
                                            [action] => 
            $$= NEW_PTN PT_order($3);
          
                                        )

                                )

                        )

                )

        )

    [order_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $1->push_back($3);
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_expr
                                            [action] => 
            $$= NEW_PTN PT_order_list();
            if ($1 == NULL)
              MYSQL_YYABORT;
            $$->push_back($1);
          
                                        )

                                )

                        )

                )

        )

    [order_dir] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$ =  1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASC
                                            [action] =>  $$ =1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DESC
                                            [action] =>  $$ =0; 
                                        )

                                )

                        )

                )

        )

    [opt_limit_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => limit_clause
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [limit_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIMIT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => limit_options
                                            [action] => 
            $$= NEW_PTN PT_limit_clause($2);
          
                                        )

                                )

                        )

                )

        )

    [limit_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => limit_option
                                            [action] => 
            $$.limit= $1;
            $$.opt_offset= NULL;
            $$.is_offset_first= false;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => limit_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => limit_option
                                            [action] => 
            $$.limit= $3;
            $$.opt_offset= $1;
            $$.is_offset_first= true;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => limit_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => OFFSET_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => limit_option
                                            [action] => 
            $$.limit= $1;
            $$.opt_offset= $3;
            $$.is_offset_first= false;
          
                                        )

                                )

                        )

                )

        )

    [limit_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_limit_option_ident(@$, $1, @1.raw);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => param_marker
                                            [action] => 
            $$= NEW_PTN PTI_limit_option_param_marker(@$, $1);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] => 
            $$= NEW_PTN Item_uint(@$, $1.str, $1.length);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] => 
            $$= NEW_PTN Item_uint(@$, $1.str, $1.length);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
            $$= NEW_PTN Item_uint(@$, $1.str, $1.length);
          
                                        )

                                )

                        )

                )

        )

    [opt_simple_limit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIMIT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => limit_option
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [ulong_num] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HEX_NUM
                                            [action] =>  $$= (ulong) my_strtoll($1.str, (char**) 0, 16); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLOAT_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                )

        )

    [real_ulong_num] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HEX_NUM
                                            [action] =>  $$= (ulong) my_strtoll($1.str, (char**) 0, 16); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] =>  int error; $$= (ulong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => dec_num_error
                                            [action] =>  MYSQL_YYABORT; 
                                        )

                                )

                        )

                )

        )

    [ulonglong_num] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLOAT_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                )

        )

    [real_ulonglong_num] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] =>  int error; $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error); 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => dec_num_error
                                            [action] =>  MYSQL_YYABORT; 
                                        )

                                )

                        )

                )

        )

    [dec_num_error] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => dec_num
                                            [action] =>  my_syntax_error(ER(ER_ONLY_INTEGERS_ALLOWED)); 
                                        )

                                )

                        )

                )

        )

    [dec_num] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_NUM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLOAT_NUM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_procedure_analyse_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ANALYSE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_procedure_analyse_params
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            $$= NEW_PTN PT_procedure_analyse($4);
          
                                        )

                                )

                        )

                )

        )

    [opt_procedure_analyse_params] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            $$.max_treemem= Proc_analyse_params::default_max_treemem;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => procedure_analyse_param
                                            [action] => 
            $$.max_tree_elements= static_cast<uint>($1);
            $$.max_treemem= Proc_analyse_params::default_max_treemem;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => procedure_analyse_param
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => procedure_analyse_param
                                            [action] => 
            $$.max_tree_elements= static_cast<uint>($1);
            $$.max_treemem= static_cast<uint>($3);
          
                                        )

                                )

                        )

                )

        )

    [procedure_analyse_param] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
            int error;
            $$= (ulonglong) my_strtoll10($1.str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [select_var_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_var_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_var_ident
                                            [action] => 
            $$= $1;
            if ($$ == NULL || $$->push_back($3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_var_ident
                                            [action] => 
            $$= NEW_PTN PT_select_var_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [select_var_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= NEW_PTN PT_select_var($2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= NEW_PTN PT_select_sp_var($1);
          
                                        )

                                )

                        )

                )

        )

    [opt_into] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => into
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [into] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => into_destination
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [into_destination] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OUTFILE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_filesystem
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_load_data_charset
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_field_term
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_line_term
                                            [action] => 
            $$= NEW_PTN PT_into_destination_outfile($2, $3, $4, $5);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DUMPFILE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_filesystem
                                            [action] => 
            $$= NEW_PTN PT_into_destination_dumpfile($2);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select_var_list
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [do_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => empty_select_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_item_list
                                            [action] => 
            $$= NEW_PTN PT_select(
                  NEW_PTN PT_select_init2(NULL,
                    NEW_PTN PT_select_part2(
                      NEW_PTN PT_select_options_and_item_list($2, $3)), NULL),
                                                              SQLCOM_DO);
          
                                        )

                                )

                        )

                )

        )

    [empty_select_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.query_spec_options= 0;
            $$.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          
                                        )

                                )

                        )

                )

        )

    [drop] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_temporary
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= $2;
            lex->drop_if_exists= $4;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_restrict
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => {
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => LEX
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => *lex=Lex;
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => Alter_drop
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => *ad=
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => new
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => Alter_drop(Alter_drop::KEY,
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => $3.str);
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => if
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => (ad
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => ==
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => NULL)
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => MYSQL_YYABORT;
                                            [action] => 
                                        )

                                    [18] => Array
                                        (
                                            [id] => lex->sql_command=
                                            [action] => 
                                        )

                                    [19] => Array
                                        (
                                            [id] => SQLCOM_DROP_INDEX;
                                            [action] => 
                                        )

                                    [20] => Array
                                        (
                                            [id] => lex->alter_info.reset();
                                            [action] => 
                                        )

                                    [21] => Array
                                        (
                                            [id] => lex->alter_info.flags=
                                            [action] => 
                                        )

                                    [22] => Array
                                        (
                                            [id] => Alter_info::ALTER_DROP_INDEX;
                                            [action] => 
                                        )

                                    [23] => Array
                                        (
                                            [id] => lex->alter_info.drop_list.push_back(ad);
                                            [action] => 
                                        )

                                    [24] => Array
                                        (
                                            [id] => if
                                            [action] => 
                                        )

                                    [25] => Array
                                        (
                                            [id] => (!lex->current_select()->add_table_to_list(lex->thd,
                                            [action] => 
                                        )

                                    [26] => Array
                                        (
                                            [id] => $5,
                                            [action] => 
                                        )

                                    [27] => Array
                                        (
                                            [id] => NULL,
                                            [action] => 
                                        )

                                    [28] => Array
                                        (
                                            [id] => TL_OPTION_UPDATING,
                                            [action] => 
                                        )

                                    [29] => Array
                                        (
                                            [id] => TL_READ_NO_INSERT,
                                            [action] => 
                                        )

                                    [30] => Array
                                        (
                                            [id] => MDL_SHARED_UPGRADABLE))
                                            [action] => 
                                        )

                                    [31] => Array
                                        (
                                            [id] => MYSQL_YYABORT;
                                            [action] => 
                                        )

                                    [32] => Array
                                        (
                                            [id] => }
                                            [action] => 
                                        )

                                    [33] => Array
                                        (
                                            [id] => opt_index_lock_algorithm
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=$3;
            lex->name= $4;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ($4.str &&
                (check_and_convert_db_name(&$4, FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (sp_check_name(&$6))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= $3;
            spname= new sp_name(to_lex_cstring($4), $6, true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&$4))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= $3;
            spname= new sp_name(to_lex_cstring(db), $4, false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= $3;
            lex->spname= $4;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= $3;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= $3;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_restrict
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            Lex->drop_if_exists= $3;
            Lex->spname= $4;
            Lex->sql_command = SQLCOM_DROP_EVENT;
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TRIGGER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= $3;
            lex->spname= $4;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => tablespace_name
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => drop_ts_options_list
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGFILE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => GROUP_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => logfile_group_name
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => drop_ts_options_list
                                            [action] => 
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SERVER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => if_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server($4, $3);
          
                                        )

                                )

                        )

                )

        )

    [table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_name
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_name
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            if (!Select->add_table_to_list(YYTHD, $1, NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [table_alias_ref_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident_opt_wild
                                            [action] => 
            $$.init(YYTHD->mem_root);
            if ($$.push_back($1))
              MYSQL_YYABORT; // OOM
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_alias_ref_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident_opt_wild
                                            [action] => 
            $$= $1;
            if ($$.push_back($3))
              MYSQL_YYABORT; // OOM
          
                                        )

                                )

                        )

                )

        )

    [if_exists] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IF
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EXISTS
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                )

        )

    [opt_temporary] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEMPORARY
                                            [action] =>  $$= 1; 
                                        )

                                )

                        )

                )

        )

    [drop_ts_options_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => drop_ts_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => drop_ts_options:
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => drop_ts_option
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => drop_ts_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => drop_ts_option
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => drop_ts_options_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => drop_ts_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [drop_ts_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_ts_engine
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ts_wait
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => insert_stmt:
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INSERT
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => insert_lock_option
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_ignore
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => insert_from_constructor
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => opt_insert_update_list
                                            [action] => 
            $$= NEW_PTN PT_insert(false, $1, $2, $3, $5, $6,
                                  $7.column_list, $7.row_value_list,
                                  NULL,
                                  $8.column_list, $8.value_list);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => insert_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ignore
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => update_list
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_insert_update_list
                                            [action] => 
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&$8.value_list->value))
              MYSQL_YYABORT; // OOM
            $$= NEW_PTN PT_insert(false, $1, $2, $3, $5, $6,
                                  $8.column_list, one_row,
                                  NULL,
                                  $9.column_list, $9.value_list);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => insert_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ignore
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => insert_from_subquery
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_insert_update_list
                                            [action] => 
            $$= NEW_PTN PT_insert(false, $1, $2, $3, $5, $6,
                                  $7.column_list, NULL,
                                  $7.insert_query_expression,
                                  $8.column_list, $8.value_list);
          
                                        )

                                )

                        )

                )

        )

    [replace_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLACE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => replace_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => insert_from_constructor
                                            [action] => 
            $$= NEW_PTN PT_insert(true, $1, $2, false, $4, $5,
                                  $6.column_list, $6.row_value_list,
                                  NULL,
                                  NULL, NULL);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLACE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => replace_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => update_list
                                            [action] => 
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&$7.value_list->value))
              MYSQL_YYABORT; // OOM
            $$= NEW_PTN PT_insert(true, $1, $2, false, $4, $5,
                                  $7.column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLACE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => replace_lock_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_INTO
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => insert_from_subquery
                                            [action] => 
            $$= NEW_PTN PT_insert(true, $1, $2, false, $4, $5,
                                  $6.column_list, NULL,
                                  $6.insert_query_expression,
                                  NULL, NULL);
          
                                        )

                                )

                        )

                )

        )

    [insert_lock_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= TL_WRITE_CONCURRENT_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOW_PRIORITY
                                            [action] =>  $$= TL_WRITE_LOW_PRIORITY; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELAYED_SYM
                                            [action] => 
          $$= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HIGH_PRIORITY
                                            [action] =>  $$= TL_WRITE; 
                                        )

                                )

                        )

                )

        )

    [replace_lock_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_low_priority
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELAYED_SYM
                                            [action] => 
          $$= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        
                                        )

                                )

                        )

                )

        )

    [opt_INTO] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [insert_from_constructor] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => insert_values
                                            [action] => 
            $$.column_list= NEW_PTN PT_item_list;
            $$.row_value_list= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => insert_values
                                            [action] => 
            $$.column_list= NEW_PTN PT_item_list;
            $$.row_value_list= $3;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => fields
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => insert_values
                                            [action] => 
            $$.column_list= $2;
            $$.row_value_list= $4;
          
                                        )

                                )

                        )

                )

        )

    [insert_from_subquery] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => insert_query_expression
                                            [action] => 
            $$.column_list= NEW_PTN PT_item_list;
            $$.insert_query_expression= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => insert_query_expression
                                            [action] => 
            $$.column_list= NEW_PTN PT_item_list;
            $$.insert_query_expression= $3;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => fields
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => insert_query_expression
                                            [action] => 
            $$.column_list= $2;
            $$.insert_query_expression= $4;
          
                                        )

                                )

                        )

                )

        )

    [fields] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fields
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => insert_ident
                                            [action] => 
            if ($$->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => insert_ident
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [insert_values] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => value_or_values
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => values_list
                                            [action] => 
            $$= $2;
          
                                        )

                                )

                        )

                )

        )

    [insert_query_expression] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_select
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_union_clause
                                            [action] => 
            $$= NEW_PTN PT_insert_query_expression(false, $1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_select
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => union_opt
                                            [action] => 
            $$= NEW_PTN PT_insert_query_expression(true, $2, $4);
          
                                        )

                                )

                        )

                )

        )

    [value_or_values] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUES
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [values_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => values_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => row_value
                                            [action] => 
            if ($$->push_back(&$3->value))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => row_value
                                            [action] => 
            $$= NEW_PTN PT_insert_values_list;
            if ($$ == NULL || $$->push_back(&$1->value))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [equal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET_VAR
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_equal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [row_value] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_values
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [opt_values] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => values
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [values] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => values
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_or_default
                                            [action] => 
            if ($1->push_back($3))
              MYSQL_YYABORT;
            $$= $1;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr_or_default
                                            [action] => 
            $$= NEW_PTN PT_item_list;
            if ($$ == NULL || $$->push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [expr_or_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
            $$= NEW_PTN Item_default_value(@$);
          
                                        )

                                )

                        )

                )

        )

    [opt_insert_update_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            $$.value_list= NULL;
            $$.column_list= NULL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DUPLICATE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => KEY_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => update_list
                                            [action] => 
            $$= $5;
          
                                        )

                                )

                        )

                )

        )

    [update_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_low_priority
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_ignore
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => join_table_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => update_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_order_clause
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => opt_simple_limit
                                            [action] => 
            $$= NEW_PTN PT_update($1, $2, $3, $4, $6.column_list, $6.value_list,
                                  $7, $8, $9);
          
                                        )

                                )

                        )

                )

        )

    [update_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => update_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => update_elem
                                            [action] => 
            $$= $1;
            if ($$.column_list->push_back($3.column) ||
                $$.value_list->push_back($3.value))
              MYSQL_YYABORT; // OOM
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => update_elem
                                            [action] => 
            $$.column_list= NEW_PTN PT_item_list;
            $$.value_list= NEW_PTN PT_item_list;
            if ($$.column_list == NULL || $$.value_list == NULL ||
                $$.column_list->push_back($1.column) ||
                $$.value_list->push_back($1.value))
              MYSQL_YYABORT; // OOM
          
                                        )

                                )

                        )

                )

        )

    [update_elem] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_or_default
                                            [action] => 
            $$.column= $1;
            $$.value= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_low_priority] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= TL_WRITE_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOW_PRIORITY
                                            [action] =>  $$= TL_WRITE_LOW_PRIORITY; 
                                        )

                                )

                        )

                )

        )

    [delete_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_delete_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_order_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => opt_simple_limit
                                            [action] => 
            $$= NEW_PTN PT_delete(YYTHD->mem_root, $1, $2, $4, $5, $6, $7, $8);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_delete_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_alias_ref_list
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => join_table_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
            $$= NEW_PTN PT_delete($1, $2, $3, $5, $6);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_delete_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_alias_ref_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => USING
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => join_table_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
            $$= NEW_PTN PT_delete($1, $2, $4, $6, $7);
          
                                        )

                                )

                        )

                )

        )

    [opt_wild] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_delete_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_delete_option
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_delete_options
                                            [action] =>  $$= $1 | $2; 
                                        )

                                )

                        )

                )

        )

    [opt_delete_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUICK
                                            [action] =>  $$= DELETE_QUICK; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOW_PRIORITY
                                            [action] =>  $$= DELETE_LOW_PRIORITY; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] =>  $$= DELETE_IGNORE; 
                                        )

                                )

                        )

                )

        )

    [truncate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRUNCATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_table_sym
                                            [action] => 
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_name
                                            [action] => 
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_table_sym] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_profile_defs] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => profile_defs;
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => profile_defs:
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => profile_def
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => profile_defs
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => profile_def;
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => profile_def:
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => CPU_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_CPU;
    
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEMORY_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_MEMORY;
    
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BLOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IO_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_BLOCK_IO;
    
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTEXT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SWITCHES_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_CONTEXT;
    
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PAGE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FAULTS_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IPC_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_IPC;
    
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SWAPS_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_SWAPS;
    
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SOURCE_SYM
                                            [action] => 
      Lex->profile_options|= PROFILE_SOURCE;
    
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
      Lex->profile_options|= PROFILE_ALL;
    
                                        )

                                )

                        )

                )

        )

    [opt_profile_args] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
      Lex->query_id= 0;
    
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10($3.str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    
                                        )

                                )

                        )

                )

        )

    [show] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHOW
                                            [action] => 
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => show_param
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [show_param] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATABASES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_full
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLES
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= $3;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_full
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TRIGGERS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= $3;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVENTS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= $2;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= $3;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPEN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLES
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= $3;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PLUGINS_SYM
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => known_storage_engines
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => show_engine_param
                                            [action] =>  Lex->create_info.db_type= $2; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => show_engine_param
                                            [action] =>  Lex->create_info.db_type= NULL; 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_full
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COLUMNS
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => from_or_in
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ($5)
              $4->change_db($5);
            if (prepare_schema_table(YYTHD, lex, $4, SCH_COLUMNS))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_or_binary
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] => 
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => HOSTS_SYM
                                            [action] => 
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINLOG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EVENTS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => binlog_in
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => binlog_from
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            if ($6 != NULL)
              CONTEXTUALIZE($6);
          
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAYLOG_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EVENTS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => binlog_in
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => binlog_from
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
            if ($6 != NULL)
              CONTEXTUALIZE($6);
          
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keys_or_index
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => from_or_in
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_db
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
            if ($5 != NULL)
              ITEMIZE($5, &$5);
            Select->set_where_cond($5);

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ($4)
              $3->change_db($4);
            if (prepare_schema_table(YYTHD, lex, $3, SCH_STATISTICS))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_storage
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ENGINES_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIVILEGES
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => WARNINGS
                                            [action] => 
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COUNT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ERRORS
                                            [action] => 
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WARNINGS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            if ($2 != NULL)
              CONTEXTUALIZE($2);

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ERRORS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            if ($2 != NULL)
              CONTEXTUALIZE($2);

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROFILES_SYM
                                            [action] => 
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROFILE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_profile_defs
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_profile_args
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            if ($4 != NULL)
              CONTEXTUALIZE($4);

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_var_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_wild_or_where_for_show
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= $1;
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ($1 == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status(@$, thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status(@$, thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_full
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PROCESSLIST_SYM
                                            [action] =>  Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => opt_var_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VARIABLES
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_wild_or_where_for_show
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_VARIABLES;
              lex->option_type= $1;
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ($1 == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables(@$, thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables(@$, thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANTS
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANTS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=$3;
            lex->grant_user->auth= NULL_CSTR;
          
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASE
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_if_not_exists
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=$3;
            Lex->name= $4;
          
                                        )

                                )

                        )

                    [31] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, $3, NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          
                                        )

                                )

                        )

                    [32] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, $3, NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          
                                        )

                                )

                        )

                    [33] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          
                                        )

                                )

                        )

                    [34] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          
                                        )

                                )

                        )

                    [35] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= $3;
          
                                        )

                                )

                        )

                    [36] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= $3;
          
                                        )

                                )

                        )

                    [37] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TRIGGER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= $3;
          
                                        )

                                )

                        )

                    [38] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [39] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_wild_or_where
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [40] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CODE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= $3;
          
                                        )

                                )

                        )

                    [41] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CODE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= $3;
          
                                        )

                                )

                        )

                    [42] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
            Lex->spname= $3;
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          
                                        )

                                )

                        )

                    [43] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => user
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=$4;
          
                                        )

                                )

                        )

                )

        )

    [show_engine_param] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] =>  Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MUTEX_SYM
                                            [action] =>  Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; 
                                        )

                                )

                        )

                )

        )

    [master_or_binary] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_storage] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_db] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => from_or_in
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$= $2.str; 
                                        )

                                )

                        )

                )

        )

    [opt_full] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->verbose=0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FULL
                                            [action] =>  Lex->verbose=1; 
                                        )

                                )

                        )

                )

        )

    [from_or_in] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [binlog_in] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->mi.log_file_name = 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IN_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  Lex->mi.log_file_name = $2.str; 
                                        )

                                )

                        )

                )

        )

    [binlog_from] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->mi.pos = 4; /* skip magic number */ 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulonglong_num
                                            [action] =>  Lex->mi.pos = $2; 
                                        )

                                )

                        )

                )

        )

    [opt_wild_or_where] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->wild= new (YYTHD->mem_root) String($2.str, $2.length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHERE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($2, &$2);

            Select->set_where_cond($2);
            if ($2)
              $2->top_level_item();
          
                                        )

                                )

                        )

                )

        )

    [opt_wild_or_where_for_show] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIKE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->wild= new (YYTHD->mem_root) String($2.str, $2.length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WHERE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            if (show_compatibility_56)
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE($2, &$2);

              Select->set_where_cond($2);
              if ($2)
                $2->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond($2);
            }
          
                                        )

                                )

                        )

                )

        )

    [describe] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => describe_command
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, $2, SCH_COLUMNS))
              MYSQL_YYABORT;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_describe_column
                                            [action] => 
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => describe_command
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_extended_describe
                                            [action] => 
            Lex->describe|= DESCRIBE_NORMAL;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => explainable_command
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [explainable_command] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => select
                                            [action] =>  CONTEXTUALIZE($1); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => insert_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => replace_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => update_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => delete_stmt
                                            [action] =>  MAKE_CMD($1); 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CONNECTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => real_ulong_num
                                            [action] => 
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)($3);
          
                                        )

                                )

                        )

                )

        )

    [describe_command] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DESC
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DESCRIBE
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_extended_describe] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENDED_SYM
                                            [action] => 
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITIONS_SYM
                                            [action] => 
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORMAT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            if (!my_strcasecmp(system_charset_info, $3.str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, $3.str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [opt_describe_column] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_string
                                            [action] =>  Lex->wild= $1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            Lex->wild= new (YYTHD->mem_root) String((const char*) $1.str,
                                                    $1.length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [flush] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLUSH_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_no_write_to_binlog
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= $2;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => flush_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [flush_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_table_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_flush_lock
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => flush_options_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_flush_lock] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => EXPORT_SYM
                                            [action] => 
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          
                                        )

                                )

                        )

                )

        )

    [flush_options_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => flush_options_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => flush_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => flush_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [flush_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ERROR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_ERROR_LOG; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_ENGINE_LOG; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GENERAL
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_GENERAL_LOG; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLOW
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_SLOW_LOG; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_BINARY_LOG; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_channel
                                            [action] =>  Lex->type|= REFRESH_RELAY_LOG; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CACHE_SYM
                                            [action] =>  Lex->type|= REFRESH_QUERY_CACHE_FREE; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOSTS_SYM
                                            [action] =>  Lex->type|= REFRESH_HOSTS; 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIVILEGES
                                            [action] =>  Lex->type|= REFRESH_GRANT; 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] =>  Lex->type|= REFRESH_LOG; 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] =>  Lex->type|= REFRESH_STATUS; 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DES_KEY_FILE
                                            [action] =>  Lex->type|= REFRESH_DES_KEY_FILE; 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESOURCES
                                            [action] =>  Lex->type|= REFRESH_USER_RESOURCES; 
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPTIMIZER_COSTS_SYM
                                            [action] =>  Lex->type|= REFRESH_OPTIMIZER_COSTS; 
                                        )

                                )

                        )

                )

        )

    [opt_table_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [reset] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESET_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => reset_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [reset_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => reset_options
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => reset_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => reset_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [reset_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLAVE
                                            [action] =>  Lex->type|= REFRESH_SLAVE; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => slave_reset_options
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_channel
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SYM
                                            [action] =>  Lex->type|= REFRESH_MASTER; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CACHE_SYM
                                            [action] =>  Lex->type|= REFRESH_QUERY_CACHE;
                                        )

                                )

                        )

                )

        )

    [slave_reset_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->reset_slave_info.all= false; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] =>  Lex->reset_slave_info.all= true; 
                                        )

                                )

                        )

                )

        )

    [purge] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PURGE
                                            [action] => 
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => purge_options
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [purge_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => master_or_binary
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => purge_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [purge_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            Lex->to_log = $2.str;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEFORE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($2, &$2);

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front($2);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          
                                        )

                                )

                        )

                )

        )

    [kill] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KILL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => kill_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            ITEMIZE($3, &$3);

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front($3);
            lex->sql_command= SQLCOM_KILL;
          
                                        )

                                )

                        )

                )

        )

    [kill_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->type= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONNECTION_SYM
                                            [action] =>  Lex->type= 0; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] =>  Lex->type= ONLY_KILL_QUERY; 
                                        )

                                )

                        )

                )

        )

    [use] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= $2.str;
          
                                        )

                                )

                        )

                )

        )

    [load] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOAD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => data_or_xml
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       $2 == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => load_data_lock
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_local
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => INFILE
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => TEXT_STRING_filesystem
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  $5;
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange($7.str, 0, $2)))
              MYSQL_YYABORT;
          
                                        )

                                    [6] => Array
                                        (
                                            [id] => opt_duplicate
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => INTO
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => opt_use_partition
                                            [action] => 
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && $4 == TL_WRITE_CONCURRENT_INSERT)
              $4= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, $12, NULL, TL_OPTION_UPDATING,
                                           $4, $4 == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, $13))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          
                                        )

                                    [11] => Array
                                        (
                                            [id] => opt_load_data_charset
                                            [action] =>  Lex->exchange->cs= $15; 
                                        )

                                    [12] => Array
                                        (
                                            [id] => opt_xml_rows_identified_by
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => opt_field_term
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => opt_line_term
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => opt_ignore_lines
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => opt_field_or_var_spec
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => opt_load_data_set_spec
                                            [action] => 
            Lex->exchange->field.merge_field_separators($18);
            Lex->exchange->line.merge_line_separators($19);
          
                                        )

                                )

                        )

                )

        )

    [data_or_xml] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] =>  $$= FILETYPE_CSV; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XML_SYM
                                            [action] =>  $$= FILETYPE_XML; 
                                        )

                                )

                        )

                )

        )

    [opt_local] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=0;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] =>  $$=1;
                                        )

                                )

                        )

                )

        )

    [load_data_lock] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= TL_WRITE_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONCURRENT
                                            [action] =>  $$= TL_WRITE_CONCURRENT_INSERT; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOW_PRIORITY
                                            [action] =>  $$= TL_WRITE_LOW_PRIORITY; 
                                        )

                                )

                        )

                )

        )

    [opt_duplicate] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->duplicates=DUP_ERROR; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLACE
                                            [action] =>  Lex->duplicates=DUP_REPLACE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] =>  Lex->set_ignore(true); 
                                        )

                                )

                        )

                )

        )

    [opt_field_term] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$.cleanup(); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMNS
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_term_list
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [field_term_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_term_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => field_term
                                            [action] => 
            $$= $1;
            $$.merge_field_separators($2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_term
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [field_term] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TERMINATED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.field_term= $3;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPTIONALLY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ENCLOSED
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.enclosed= $4;
            $$.opt_enclosed= 1;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENCLOSED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.enclosed= $3;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ESCAPED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.escaped= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_line_term] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$.cleanup(); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINES
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => line_term_list
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [line_term_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => line_term_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => line_term
                                            [action] => 
            $$= $1;
            $$.merge_line_separators($2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => line_term
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [line_term] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TERMINATED
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.line_term= $3;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STARTING
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            $$.cleanup();
            $$.line_start= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_xml_rows_identified_by] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROWS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => text_string
                                            [action] =>  Lex->exchange->line.line_term = $4; 
                                        )

                                )

                        )

                )

        )

    [opt_ignore_lines] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => lines_or_rows
                                            [action] => 
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol($2.str);
          
                                        )

                                )

                        )

                )

        )

    [lines_or_rows] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINES
                                            [action] =>  
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROWS_SYM
                                            [action] =>  
                                        )

                                )

                        )

                )

        )

    [opt_field_or_var_spec] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => fields_or_vars
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [fields_or_vars] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => fields_or_vars
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => field_or_var
                                            [action] =>  Lex->load_field_list.push_back($3); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => field_or_var
                                            [action] =>  Lex->load_field_list.push_back($1); 
                                        )

                                )

                        )

                )

        )

    [field_or_var] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] =>  ITEMIZE($1, &$$); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= new (YYTHD->mem_root) Item_user_var_as_out_param($2);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [opt_load_data_set_spec] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => load_data_set_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [load_data_set_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => load_data_set_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => load_data_set_elem
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => load_data_set_elem
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [load_data_set_elem] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr_or_default
                                            [action] => 
            ITEMIZE($1, &$1);
            ITEMIZE($3, &$3);

            LEX *lex= Lex;
            uint length= (uint) (@3.cpp.end - @2.cpp.start);
            String *val= new (YYTHD->mem_root) String(@2.cpp.start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back($1) ||
                lex->load_value_list.push_back($3) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            $3->item_name.copy(@2.cpp.start, length, YYTHD->charset());
          
                                        )

                                )

                        )

                )

        )

    [text_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= NEW_PTN PTI_text_literal_text_string(@$,
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), $1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_STRING
                                            [action] => 
            $$= NEW_PTN PTI_text_literal_nchar_string(@$,
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), $1);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDERSCORE_CHARSET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= NEW_PTN PTI_text_literal_underscore_charset(@$,
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), $1, $2);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_literal
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING_literal
                                            [action] => 
            $$= NEW_PTN PTI_text_literal_concat(@$,
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), $1, $2);
          
                                        )

                                )

                        )

                )

        )

    [text_string] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_literal
                                            [action] => 
            $$= new (YYTHD->mem_root) String($1.str,
                                             $1.length,
                                             YYTHD->variables.collation_connection);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HEX_NUM
                                            [action] => 
            LEX_STRING s= Item_hex_string::make_hex_str($1.str, $1.length);
            $$= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIN_NUM
                                            [action] => 
            LEX_STRING s= Item_bin_string::make_bin_str($1.str, $1.length);
            $$= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [param_marker] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARAM_MARKER
                                            [action] => 
            $$= NEW_PTN Item_param(@$,
                                   (uint) (@1.raw.start - YYLIP->get_buf()));
          
                                        )

                                )

                        )

                )

        )

    [signed_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => literal
                                            [action] =>  ITEMIZE($1, &$$); 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '+'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM_literal
                                            [action] =>  ITEMIZE($2, &$$); 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '-'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NUM_literal
                                            [action] => 
            ITEMIZE($2, &$2);

            $2->max_length++;
            $$= ((Item_int *)$2)->neg();
          
                                        )

                                )

                        )

                )

        )

    [literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_literal
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM_literal
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => temporal_literal
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NULL_SYM
                                            [action] => 
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            $$= NEW_PTN Item_null(@$);
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FALSE_SYM
                                            [action] => 
            $$= NEW_PTN Item_int(@$, NAME_STRING("FALSE"), 0, 1);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRUE_SYM
                                            [action] => 
            $$= NEW_PTN Item_int(@$, NAME_STRING("TRUE"), 1, 1);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HEX_NUM
                                            [action] => 
            $$= NEW_PTN Item_hex_string(@$, $1);
          
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIN_NUM
                                            [action] => 
            $$= NEW_PTN Item_bin_string(@$, $1);
          
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDERSCORE_CHARSET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => HEX_NUM
                                            [action] => 
            $$= NEW_PTN PTI_literal_underscore_charset_hex_num(@$, $1, $2);
          
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDERSCORE_CHARSET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => BIN_NUM
                                            [action] => 
            $$= NEW_PTN PTI_literal_underscore_charset_bin_num(@$, $1, $2);
          
                                        )

                                )

                        )

                )

        )

    [NUM_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUM
                                            [action] => 
            $$= NEW_PTN PTI_num_literal_num(@$, $1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LONG_NUM
                                            [action] => 
            $$= NEW_PTN PTI_num_literal_num(@$, $1);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ULONGLONG_NUM
                                            [action] => 
            $$= NEW_PTN Item_uint(@$, $1.str, $1.length);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DECIMAL_NUM
                                            [action] => 
            $$= NEW_PTN Item_decimal(@$, $1.str, $1.length, YYCSCL);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLOAT_NUM
                                            [action] => 
            $$= NEW_PTN Item_float(@$, $1.str, $1.length);
          
                                        )

                                )

                        )

                )

        )

    [temporal_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= NEW_PTN PTI_temporal_literal(@$, $2, MYSQL_TYPE_DATE, YYCSCL);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= NEW_PTN PTI_temporal_literal(@$, $2, MYSQL_TYPE_TIME, YYCSCL);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= NEW_PTN PTI_temporal_literal(@$, $2, MYSQL_TYPE_DATETIME, YYCSCL);
          
                                        )

                                )

                        )

                )

        )

    [insert_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_nospvar
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_wild
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_wild] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            $$= NEW_PTN PTI_table_wild(@$, NULL, $1.str);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            $$= NEW_PTN PTI_table_wild(@$, $1.str, $3.str);
          
                                        )

                                )

                        )

                )

        )

    [order_expr] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => order_dir
                                            [action] => 
            $$= NEW_PTN PT_order_expr($1, $2);
          
                                        )

                                )

                        )

                )

        )

    [simple_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_simple_ident_ident(@$, $1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_q
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [simple_ident_nospvar] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_simple_ident_nospvar_ident(@$, $1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => simple_ident_q
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [simple_ident_q] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_simple_ident_q_2d(@$, $1.str, $3.str);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_simple_ident_q_3d(@$, NULL, $2.str, $4.str);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PTI_simple_ident_q_3d(@$, $1.str, $3.str, $5.str);
          
                                        )

                                )

                        )

                )

        )

    [field_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$=$1;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, $1.str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, $3.str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), $3.str);
              MYSQL_YYABORT;
            }
            $$=$5;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, $1.str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), $1.str);
              MYSQL_YYABORT;
            }
            $$=$3;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$=$2;
                                        )

                                    [2] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => For
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => Delphi
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN Table_ident(to_lex_cstring($1));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              $$= NEW_PTN Table_ident(to_lex_cstring($3));
            else {
              $$= NEW_PTN Table_ident(to_lex_cstring($1), to_lex_cstring($3));
            }
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            /* For Delphi */
            $$= NEW_PTN Table_ident(to_lex_cstring($2));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [table_ident_opt_wild] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_wild
                                            [action] => 
            $$= NEW_PTN Table_ident(to_lex_cstring($1));
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_wild
                                            [action] => 
            $$= NEW_PTN Table_ident(YYTHD, to_lex_cstring($1),
                                    to_lex_cstring($3), 0);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [table_ident_nodb] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX_CSTRING db= { any_db, strlen(any_db) };
            $$= new Table_ident(YYTHD, db, to_lex_cstring($1), 0);
            if ($$ == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [IDENT_sys] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT_QUOTED
                                            [action] => 
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, $1.str,
                                                     $1.str+$1.length,
                                                     $1.length, &dummy_error);
              if (wlen < $1.length)
              {
                ErrConvString err($1.str, $1.length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              $$= $1;
            }
            else
            {
              if (thd->convert_string(&$$, system_charset_info,
                                  $1.str, $1.length, thd->charset()))
                MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [TEXT_STRING_sys_nonewline] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            if (!strcont($1.str, "\n"))
              $$= $1;
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", $1.str);
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [filter_wild_db_table_string] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_sys_nonewline
                                            [action] => 
            if (strcont($1.str, "."))
              $$= $1;
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [TEXT_STRING_sys] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              $$= $1;
            else
            {
              if (thd->convert_string(&$$, system_charset_info,
                                  $1.str, $1.length, thd->charset()))
                MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [TEXT_STRING_literal] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              $$= $1;
            else
            {
              if (thd->convert_string(&$$, thd->variables.collation_connection,
                                  $1.str, $1.length, thd->charset()))
                MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [TEXT_STRING_filesystem] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              $$= $1;
            else
            {
              if (thd->convert_string(&$$,
                                      thd->variables.character_set_filesystem,
                                      $1.str, $1.length, thd->charset()))
                MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                )

        )

    [ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT_sys
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keyword
                                            [action] => 
            THD *thd= YYTHD;
            $$.str= thd->strmake($1.str, $1.length);
            if ($$.str == NULL)
              MYSQL_YYABORT;
            $$.length= $1.length;
          
                                        )

                                )

                        )

                )

        )

    [label_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENT_sys
                                            [action] =>  $$=$1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keyword_sp
                                            [action] => 
            THD *thd= YYTHD;
            $$.str= thd->strmake($1.str, $1.length);
            if ($$.str == NULL)
              MYSQL_YYABORT;
            $$.length= $1.length;
          
                                        )

                                )

                        )

                )

        )

    [ident_or_text] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] =>  $$=$1;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] =>  $$=$1;
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEX_HOSTNAME
                                            [action] =>  $$=$1;
                                        )

                                )

                        )

                )

        )

    [user] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            THD *thd= YYTHD;
            if (!($$=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &$1);

            $$->user.str= $1.str;
            $$->user.length= $1.length;
            $$->host.str= "%";
            $$->host.length= 1;
            $$->plugin= EMPTY_CSTR;
            $$->auth= NULL_CSTR;
            $$->uses_identified_by_clause= false;
            $$->uses_identified_with_clause= false;
            $$->uses_identified_by_password_clause= false;
            $$->uses_authentication_string_clause= false;

            if (check_string_char_length($$->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            THD *thd= YYTHD;
            if (!($$=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &$1);
            trim_whitespace(system_charset_info, &$3);

            $$->user.str= $1.str;
            $$->user.length= $1.length;
            $$->host.str= $3.str;
            $$->host.length= $3.length;
            $$->plugin= EMPTY_CSTR;
            $$->auth= NULL_CSTR;
            $$->uses_identified_by_clause= false;
            $$->uses_identified_with_clause= false;
            $$->uses_identified_by_password_clause= false;
            $$->uses_authentication_string_clause= false;

            if (check_string_char_length($$->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name($$->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, $3.str);
            $$->host.str= $3.str;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURRENT_USER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => optional_braces
                                            [action] => 
            if (!($$=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset($$, 0, sizeof(LEX_USER));
          
                                        )

                                )

                        )

                )

        )

    [keyword] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => keyword_sp
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ACCOUNT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ASCII_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALWAYS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BACKUP_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEGIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BYTE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CACHE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHARSET
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHECKSUM_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CLOSE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMIT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTAINS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEALLOCATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DO_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXECUTE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FLUSH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOLLOWS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FORMAT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GROUP_REPLICATION
                                            [action] => 
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HANDLER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HELP_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSTALL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LANGUAGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPEN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OPTIONS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OWNER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [31] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARSER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [32] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARSE_GCOL_EXPR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [33] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PORT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [34] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRECEDES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [35] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PREPARE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [36] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REMOVE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [37] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPAIR
                                            [action] => 
                                        )

                                )

                        )

                    [38] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESET_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [39] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESTORE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [40] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROLLBACK_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [41] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SAVEPOINT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [42] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SECURITY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [43] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERVER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [44] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHUTDOWN
                                            [action] => 
                                        )

                                )

                        )

                    [45] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIGNED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [46] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SOCKET_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [47] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLAVE
                                            [action] => 
                                        )

                                )

                        )

                    [48] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SONAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [49] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => START_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [50] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STOP_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [51] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRUNCATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [52] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNICODE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [53] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNINSTALL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [54] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WRAPPER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [55] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [56] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UPGRADE_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [keyword_sp] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ACTION
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ADDDATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AFTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AGAINST
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AGGREGATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ANALYSE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ANY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AUTO_INC
                                            [action] => 
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AUTOEXTEND_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AVG_ROW_LENGTH
                                            [action] => 
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AVG_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINLOG_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BIT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BLOCK_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BOOL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BOOLEAN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BTREE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CASCADED
                                            [action] => 
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CATALOG_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHAIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANGED
                                            [action] => 
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CHANNEL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CIPHER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CLIENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CLASS_ORIGIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COALESCE
                                            [action] => 
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CODE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLLATION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [30] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [31] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMN_FORMAT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [32] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COLUMNS
                                            [action] => 
                                        )

                                )

                        )

                    [33] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMITTED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [34] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPACT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [35] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPLETION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [36] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPRESSED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [37] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMPRESSION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [38] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONCURRENT
                                            [action] => 
                                        )

                                )

                        )

                    [39] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONNECTION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [40] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSISTENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [41] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_CATALOG_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [42] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_SCHEMA_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [43] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONSTRAINT_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [44] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONTEXT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [45] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CPU_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [46] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CUBE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => /*
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => Although
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => a
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => reserved
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => keyword
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => in
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => SQL:2003
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => (and
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => :2008),
                                            [action] => 
                                        )

                                    [10] => Array
                                        (
                                            [id] => not
                                            [action] => 
                                        )

                                    [11] => Array
                                        (
                                            [id] => reserved
                                            [action] => 
                                        )

                                    [12] => Array
                                        (
                                            [id] => in
                                            [action] => 
                                        )

                                    [13] => Array
                                        (
                                            [id] => MySQL
                                            [action] => 
                                        )

                                    [14] => Array
                                        (
                                            [id] => per
                                            [action] => 
                                        )

                                    [15] => Array
                                        (
                                            [id] => WL#2111
                                            [action] => 
                                        )

                                    [16] => Array
                                        (
                                            [id] => specification.
                                            [action] => 
                                        )

                                    [17] => Array
                                        (
                                            [id] => */
                                            [action] => 
                                        )

                                )

                        )

                    [47] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURRENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [48] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CURSOR_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [49] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATA_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [50] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATAFILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [51] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATETIME
                                            [action] => 
                                        )

                                )

                        )

                    [52] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [53] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DAY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [54] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT_AUTH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [55] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFINER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [56] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELAY_KEY_WRITE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [57] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DES_KEY_FILE
                                            [action] => 
                                        )

                                )

                        )

                    [58] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DIAGNOSTICS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [59] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DIRECTORY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [60] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [61] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISCARD
                                            [action] => 
                                        )

                                )

                        )

                    [62] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISK_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [63] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DUMPFILE
                                            [action] => 
                                        )

                                )

                        )

                    [64] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DUPLICATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [65] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DYNAMIC_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [66] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENDS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [67] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENUM
                                            [action] => 
                                        )

                                )

                        )

                    [68] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [69] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENGINES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [70] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ERROR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [71] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ERRORS
                                            [action] => 
                                        )

                                )

                        )

                    [72] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ESCAPE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [73] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [74] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVENTS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [75] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVERY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [76] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXCHANGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [77] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXPANSION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [78] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXPIRE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [79] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXPORT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [80] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENDED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [81] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXTENT_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [82] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FAULTS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [83] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FAST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [84] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOUND_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [85] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ENABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [86] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FULL
                                            [action] => 
                                        )

                                )

                        )

                    [87] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [88] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FILE_BLOCK_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [89] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FILTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [90] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIRST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [91] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIXED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [92] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GENERAL
                                            [action] => 
                                        )

                                )

                        )

                    [93] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GEOMETRY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [94] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GEOMETRYCOLLECTION
                                            [action] => 
                                        )

                                )

                        )

                    [95] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GET_FORMAT
                                            [action] => 
                                        )

                                )

                        )

                    [96] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANTS
                                            [action] => 
                                        )

                                )

                        )

                    [97] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GLOBAL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [98] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HASH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [99] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOSTS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [100] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HOUR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [101] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [102] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IGNORE_SERVER_IDS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [103] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INVOKER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [104] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IMPORT
                                            [action] => 
                                        )

                                )

                        )

                    [105] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEXES
                                            [action] => 
                                        )

                                )

                        )

                    [106] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INITIAL_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [107] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IO_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [108] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => IPC_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [109] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ISOLATION
                                            [action] => 
                                        )

                                )

                        )

                    [110] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ISSUER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [111] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT_METHOD
                                            [action] => 
                                        )

                                )

                        )

                    [112] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => JSON_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [113] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => KEY_BLOCK_SIZE
                                            [action] => 
                                        )

                                )

                        )

                    [114] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LAST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [115] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEAVES
                                            [action] => 
                                        )

                                )

                        )

                    [116] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LESS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [117] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LEVEL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [118] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LINESTRING
                                            [action] => 
                                        )

                                )

                        )

                    [119] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LIST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [120] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [121] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCKS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [122] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOGFILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [123] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOGS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [124] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_ROWS
                                            [action] => 
                                        )

                                )

                        )

                    [125] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [126] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_HEARTBEAT_PERIOD_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [127] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_HOST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [128] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_PORT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [129] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_LOG_FILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [130] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_LOG_POS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [131] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_USER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [132] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_PASSWORD_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [133] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SERVER_ID_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [134] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_CONNECT_RETRY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [135] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_RETRY_COUNT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [136] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_DELAY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [137] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [138] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CA_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [139] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CAPATH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [140] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CERT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [141] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CIPHER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [142] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CRL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [143] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_CRLPATH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [144] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_SSL_KEY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [145] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MASTER_AUTO_POSITION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [146] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_CONNECTIONS_PER_HOUR
                                            [action] => 
                                        )

                                )

                        )

                    [147] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_QUERIES_PER_HOUR
                                            [action] => 
                                        )

                                )

                        )

                    [148] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [149] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_UPDATES_PER_HOUR
                                            [action] => 
                                        )

                                )

                        )

                    [150] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_USER_CONNECTIONS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [151] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEDIUM_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [152] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MEMORY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [153] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MERGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [154] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MESSAGE_TEXT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [155] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MICROSECOND_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [156] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIGRATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [157] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MINUTE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [158] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MIN_ROWS
                                            [action] => 
                                        )

                                )

                        )

                    [159] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MODIFY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [160] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MODE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [161] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MONTH_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [162] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTILINESTRING
                                            [action] => 
                                        )

                                )

                        )

                    [163] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOINT
                                            [action] => 
                                        )

                                )

                        )

                    [164] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MULTIPOLYGON
                                            [action] => 
                                        )

                                )

                        )

                    [165] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MUTEX_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [166] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MYSQL_ERRNO_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [167] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [168] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NAMES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [169] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NATIONAL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [170] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NCHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [171] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NDBCLUSTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [172] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEVER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [173] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEXT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [174] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEW_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [175] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_WAIT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [176] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NODEGROUP_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [177] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NONE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [178] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NUMBER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [179] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NVARCHAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [180] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OFFSET_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [181] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ONE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [182] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ONLY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [183] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PACK_KEYS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [184] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PAGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [185] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTIAL
                                            [action] => 
                                        )

                                )

                        )

                    [186] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITIONING_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [187] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PARTITIONS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [188] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                )

                        )

                    [189] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PHASE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [190] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PLUGIN_DIR_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [191] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PLUGIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [192] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PLUGINS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [193] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POINT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [194] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => POLYGON
                                            [action] => 
                                        )

                                )

                        )

                    [195] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRESERVE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [196] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PREV_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [197] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIVILEGES
                                            [action] => 
                                        )

                                )

                        )

                    [198] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCESS
                                            [action] => 
                                        )

                                )

                        )

                    [199] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCESSLIST_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [200] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROFILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [201] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROFILES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [202] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROXY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [203] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUARTER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [204] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUERY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [205] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => QUICK
                                            [action] => 
                                        )

                                )

                        )

                    [206] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_ONLY_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [207] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REBUILD_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [208] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RECOVER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [209] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDO_BUFFER_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [210] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDOFILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [211] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REDUNDANT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [212] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY
                                            [action] => 
                                        )

                                )

                        )

                    [213] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAYLOG_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [214] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_LOG_FILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [215] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_LOG_POS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [216] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELAY_THREAD
                                            [action] => 
                                        )

                                )

                        )

                    [217] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELOAD
                                            [action] => 
                                        )

                                )

                        )

                    [218] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REORGANIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [219] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPEATABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [220] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATION
                                            [action] => 
                                        )

                                )

                        )

                    [221] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_DO_DB
                                            [action] => 
                                        )

                                )

                        )

                    [222] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_IGNORE_DB
                                            [action] => 
                                        )

                                )

                        )

                    [223] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_DO_TABLE
                                            [action] => 
                                        )

                                )

                        )

                    [224] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_IGNORE_TABLE
                                            [action] => 
                                        )

                                )

                        )

                    [225] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_WILD_DO_TABLE
                                            [action] => 
                                        )

                                )

                        )

                    [226] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_WILD_IGNORE_TABLE
                                            [action] => 
                                        )

                                )

                        )

                    [227] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATE_REWRITE_DB
                                            [action] => 
                                        )

                                )

                        )

                    [228] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESOURCES
                                            [action] => 
                                        )

                                )

                        )

                    [229] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESUME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [230] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RETURNED_SQLSTATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [231] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RETURNS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [232] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REVERSE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [233] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROLLUP_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [234] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROUTINE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [235] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROWS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [236] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_COUNT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [237] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_FORMAT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [238] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROW_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [239] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RTREE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [240] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SCHEDULE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [241] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SCHEMA_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [242] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SECOND_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [243] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERIAL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [244] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERIALIZABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [245] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SESSION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [246] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SIMPLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [247] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHARE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [248] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SLOW
                                            [action] => 
                                        )

                                )

                        )

                    [249] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SNAPSHOT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [250] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SOUNDS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [251] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SOURCE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [252] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_AFTER_GTIDS
                                            [action] => 
                                        )

                                )

                        )

                    [253] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_AFTER_MTS_GAPS
                                            [action] => 
                                        )

                                )

                        )

                    [254] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_BEFORE_GTIDS
                                            [action] => 
                                        )

                                )

                        )

                    [255] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_CACHE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [256] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_BUFFER_RESULT
                                            [action] => 
                                        )

                                )

                        )

                    [257] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_NO_CACHE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [258] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_THREAD
                                            [action] => 
                                        )

                                )

                        )

                    [259] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STACKED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [260] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STARTS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [261] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_AUTO_RECALC_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [262] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_PERSISTENT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [263] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATS_SAMPLE_PAGES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [264] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STATUS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [265] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STORAGE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [266] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STRING_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [267] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBCLASS_ORIGIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [268] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBDATE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [269] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBJECT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [270] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [271] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBPARTITIONS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [272] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUPER_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [273] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUSPEND_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [274] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SWAPS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [275] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SWITCHES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [276] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_NAME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [277] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLES
                                            [action] => 
                                        )

                                )

                        )

                    [278] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_CHECKSUM_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [279] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [280] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEMPORARY
                                            [action] => 
                                        )

                                )

                        )

                    [281] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEMPTABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [282] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [283] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => THAN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [284] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRANSACTION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [285] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIGGERS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [286] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP
                                            [action] => 
                                        )

                                )

                        )

                    [287] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP_ADD
                                            [action] => 
                                        )

                                )

                        )

                    [288] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIMESTAMP_DIFF
                                            [action] => 
                                        )

                                )

                        )

                    [289] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TIME_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [290] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TYPES_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [291] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TYPE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [292] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UDF_RETURNS_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [293] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [294] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNCOMMITTED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [295] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDEFINED_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [296] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDO_BUFFER_SIZE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [297] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNDOFILE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [298] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNKNOWN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [299] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNTIL_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [300] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USER
                                            [action] => 
                                        )

                                )

                        )

                    [301] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USE_FRM
                                            [action] => 
                                        )

                                )

                        )

                    [302] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALIDATION_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [303] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VARIABLES
                                            [action] => 
                                        )

                                )

                        )

                    [304] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [305] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => VALUE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [306] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WARNINGS
                                            [action] => 
                                        )

                                )

                        )

                    [307] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WAIT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [308] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEEK_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [309] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITHOUT_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [310] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WORK_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [311] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WEIGHT_STRING_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [312] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => X509_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [313] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XID_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [314] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XML_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [315] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => YEAR_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [set] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SET
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => start_option_value_list
                                            [action] => 
            $$= NEW_PTN PT_set(@1, $2);
          
                                        )

                                )

                        )

                )

        )

    [start_option_value_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_value_no_option_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => option_value_list_continued
                                            [action] => 
            $$= NEW_PTN PT_start_option_value_list_no_type($1, @1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRANSACTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => transaction_characteristics
                                            [action] => 
            $$= NEW_PTN PT_start_option_value_list_transaction($2, @2);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => start_option_value_list_following_option_type
                                            [action] => 
            $$= NEW_PTN PT_start_option_value_list_type($1, $2);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => password
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_password($3, @3);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => password
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            $$= NEW_PTN PT_option_value_no_option_type_password($5, @5);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => password
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_password_for($3, $5, @5);
          
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => password
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            $$= NEW_PTN PT_option_value_no_option_type_password_for($3, $7, @7);
          
                                        )

                                )

                        )

                )

        )

    [start_option_value_list_following_option_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_value_following_option_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => option_value_list_continued
                                            [action] => 
            $$=
              NEW_PTN PT_start_option_value_list_following_option_type_eq($1,
                                                                          @1,
                                                                          $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRANSACTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => transaction_characteristics
                                            [action] => 
            $$= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction($2,
                                                                           @2);
          
                                        )

                                )

                        )

                )

        )

    [option_value_list_continued] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => option_value_list
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [option_value_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_value
                                            [action] => 
            $$= NEW_PTN PT_option_value_list_head(@0, $1, @1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_value_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => option_value
                                            [action] => 
            $$= NEW_PTN PT_option_value_list($1, @2, $3, @3);
          
                                        )

                                )

                        )

                )

        )

    [option_value] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_type
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => option_value_following_option_type
                                            [action] => 
            $$= NEW_PTN PT_option_value_type($1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => option_value_no_option_type
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [option_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GLOBAL_SYM
                                            [action] =>  $$=OPT_GLOBAL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SESSION_SYM
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                )

        )

    [opt_var_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GLOBAL_SYM
                                            [action] =>  $$=OPT_GLOBAL; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SESSION_SYM
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                )

        )

    [opt_var_ident_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=OPT_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GLOBAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] =>  $$=OPT_GLOBAL; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SESSION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] =>  $$=OPT_SESSION; 
                                        )

                                )

                        )

                )

        )

    [option_value_following_option_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => internal_variable_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => set_expr_or_default
                                            [action] => 
            $$= NEW_PTN PT_option_value_following_option_type(@$, $1, $3);
          
                                        )

                                )

                        )

                )

        )

    [option_value_no_option_type] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => internal_variable_name
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => set_expr_or_default
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_internal($1, $3, @3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_user_var($2, $4);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '@'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_var_ident_type
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => internal_variable_name
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => set_expr_or_default
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_sys_var($3, $4, $6);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => charset
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => old_or_new_charset_name_or_default
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_charset($2);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NAMES_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => equal
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => expr
                                            [action] => 
            /*
              Bad syntax, always fails with an error
            */
            $$= NEW_PTN PT_option_value_no_option_type_names(@2);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NAMES_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => charset_name_or_default
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_collate
                                            [action] => 
            $$= NEW_PTN PT_option_value_no_option_type_names_charset($2, $3);
          
                                        )

                                )

                        )

                )

        )

    [internal_variable_name] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PT_internal_variable_name_1d($1);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PT_internal_variable_name_2d(@$, $1, $3);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            $$= NEW_PTN PT_internal_variable_name_default($3);
          
                                        )

                                )

                        )

                )

        )

    [transaction_characteristics] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => transaction_access_mode
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_isolation_level
                                            [action] => 
            $$= NEW_PTN PT_transaction_characteristics($1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => isolation_level
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_transaction_access_mode
                                            [action] => 
            $$= NEW_PTN PT_transaction_characteristics($1, $2);
          
                                        )

                                )

                        )

                )

        )

    [transaction_access_mode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => transaction_access_mode_types
                                            [action] => 
            $$= NEW_PTN PT_transaction_access_mode($1);
          
                                        )

                                )

                        )

                )

        )

    [opt_transaction_access_mode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => transaction_access_mode
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [isolation_level] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ISOLATION
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LEVEL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => isolation_types
                                            [action] => 
            $$= NEW_PTN PT_isolation_level($3);
          
                                        )

                                )

                        )

                )

        )

    [opt_isolation_level] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => isolation_level
                                            [action] =>  $$= $2; 
                                        )

                                )

                        )

                )

        )

    [transaction_access_mode_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ONLY_SYM
                                            [action] =>  $$= true; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => WRITE_SYM
                                            [action] =>  $$= false; 
                                        )

                                )

                        )

                )

        )

    [isolation_types] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UNCOMMITTED_SYM
                                            [action] =>  $$= ISO_READ_UNCOMMITTED; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COMMITTED_SYM
                                            [action] =>  $$= ISO_READ_COMMITTED; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPEATABLE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] =>  $$= ISO_REPEATABLE_READ; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SERIALIZABLE_SYM
                                            [action] =>  $$= ISO_SERIALIZABLE; 
                                        )

                                )

                        )

                )

        )

    [password] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$=$1.str;
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                )

        )

    [set_expr_or_default] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => expr
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFAULT
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ON
                                            [action] => 
            $$= NEW_PTN Item_string(@$, "ON",  2, system_charset_info);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
            $$= NEW_PTN Item_string(@$, "ALL", 3, system_charset_info);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BINARY
                                            [action] => 
            $$= NEW_PTN Item_string(@$, "binary", 6, system_charset_info);
          
                                        )

                                )

                        )

                )

        )

    [lock] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_lock_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_or_tables] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLES
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_lock_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_lock
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_lock_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_lock
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [table_lock] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_table_alias
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => lock_option
                                            [action] => 
            thr_lock_type lock_type= (thr_lock_type) $3;
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, $1, $2, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [lock_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] =>  $$= TL_READ_NO_INSERT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WRITE_SYM
                                            [action] =>  $$= TL_WRITE_DEFAULT; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOW_PRIORITY
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => WRITE_SYM
                                            [action] => 
            $$= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] =>  $$= TL_READ; 
                                        )

                                )

                        )

                )

        )

    [unlock] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNLOCK_SYM
                                            [action] => 
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_or_tables
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [shutdown_stmt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHUTDOWN
                                            [action] => 
            Lex->sql_command= SQLCOM_SHUTDOWN;
            $$= NEW_PTN PT_shutdown();
          
                                        )

                                )

                        )

                )

        )

    [handler] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HANDLER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => OPEN_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_table_alias
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, $2, $4, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HANDLER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident_nodb
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CLOSE_SYM
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, $2, 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HANDLER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => table_ident_nodb
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => READ_SYM
                                            [action] =>                      /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, $2, 0, 0))
              MYSQL_YYABORT;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => handler_read_or_scan
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => opt_where_clause
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            if ($6 != NULL)
              ITEMIZE($6, &$6);
            Select->set_where_cond($6);

            if ($7 != NULL)
              CONTEXTUALIZE($7);

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read($5,
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [handler_read_or_scan] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => handler_scan_function
                                            [action] =>  Lex->ident= null_lex_str; $$=$1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => handler_rkey_function
                                            [action] =>  Lex->ident= $1; $$=$2; 
                                        )

                                )

                        )

                )

        )

    [handler_scan_function] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIRST_SYM
                                            [action] =>  $$= RFIRST; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEXT_SYM
                                            [action] =>  $$= RNEXT;  
                                        )

                                )

                        )

                )

        )

    [handler_rkey_function] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FIRST_SYM
                                            [action] =>  $$= RFIRST; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NEXT_SYM
                                            [action] =>  $$= RNEXT;  
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PREV_SYM
                                            [action] =>  $$= RPREV;  
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LAST_SYM
                                            [action] =>  $$= RLAST;  
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => handler_rkey_mode
                                            [action] => 
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= $1;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => values
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
            CONTEXTUALIZE($4);
            Lex->handler_insert_list= &$4->value;
            $$= RKEY;
          
                                        )

                                )

                        )

                )

        )

    [handler_rkey_mode] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EQ
                                            [action] =>  $$=HA_READ_KEY_EXACT;   
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GE
                                            [action] =>  $$=HA_READ_KEY_OR_NEXT; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LE
                                            [action] =>  $$=HA_READ_KEY_OR_PREV; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GT_SYM
                                            [action] =>  $$=HA_READ_AFTER_KEY;   
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LT
                                            [action] =>  $$=HA_READ_BEFORE_KEY;  
                                        )

                                )

                        )

                )

        )

    [revoke] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REVOKE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] =>  Lex->sql_command= SQLCOM_REVOKE; 
                                        )

                                    [2] => Array
                                        (
                                            [id] => revoke_command
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [revoke_command] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_table
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
            LEX *lex= Lex;
            lex->type= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_privileges
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => GRANT
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => OPTION
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROXY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => FROM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
            LEX *lex= Lex;
            lex->users_list.push_front ($3);
            lex->type= TYPE_ENUM_PROXY;
          
                                        )

                                )

                        )

                )

        )

    [grant] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => clear_privileges
                                            [action] =>  Lex->sql_command= SQLCOM_GRANT; 
                                        )

                                    [2] => Array
                                        (
                                            [id] => grant_command
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [grant_command] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_table
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => require_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => grant_options
                                            [action] => 
            LEX *lex= Lex;
            lex->type= 0;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => require_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => grant_options
                                            [action] => 
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_privileges
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => grant_ident
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => require_clause
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => grant_options
                                            [action] => 
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROXY_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => opt_grant_option
                                            [action] => 
            LEX *lex= Lex;
            lex->users_list.push_front ($3);
            lex->type= TYPE_ENUM_PROXY;
          
                                        )

                                )

                        )

                )

        )

    [opt_table] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TABLE_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [grant_privileges] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => object_privilege_list
                                            [action] => 
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_privileges
                                            [action] => 
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          
                                        )

                                )

                        )

                )

        )

    [opt_privileges] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRIVILEGES
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [object_privilege_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => object_privilege
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => object_privilege_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => object_privilege
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [object_privilege] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] =>  Lex->which_columns = SELECT_ACL;
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column_list
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSERT
                                            [action] =>  Lex->which_columns = INSERT_ACL;
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column_list
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UPDATE_SYM
                                            [action] =>  Lex->which_columns = UPDATE_ACL; 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column_list
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REFERENCES
                                            [action] =>  Lex->which_columns = REFERENCES_ACL;
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_column_list
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DELETE_SYM
                                            [action] =>  Lex->grant |= DELETE_ACL;
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => USAGE
                                            [action] => 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INDEX_SYM
                                            [action] =>  Lex->grant |= INDEX_ACL;
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] =>  Lex->grant |= ALTER_ACL;
                                        )

                                )

                        )

                    [8] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] =>  Lex->grant |= CREATE_ACL;
                                        )

                                )

                        )

                    [9] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DROP
                                            [action] =>  Lex->grant |= DROP_ACL;
                                        )

                                )

                        )

                    [10] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EXECUTE_SYM
                                            [action] =>  Lex->grant |= EXECUTE_ACL;
                                        )

                                )

                        )

                    [11] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELOAD
                                            [action] =>  Lex->grant |= RELOAD_ACL;
                                        )

                                )

                        )

                    [12] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHUTDOWN
                                            [action] =>  Lex->grant |= SHUTDOWN_ACL;
                                        )

                                )

                        )

                    [13] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCESS
                                            [action] =>  Lex->grant |= PROCESS_ACL;
                                        )

                                )

                        )

                    [14] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FILE_SYM
                                            [action] =>  Lex->grant |= FILE_ACL;
                                        )

                                )

                        )

                    [15] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->grant |= GRANT_ACL;
                                        )

                                )

                        )

                    [16] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHOW
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => DATABASES
                                            [action] =>  Lex->grant |= SHOW_DB_ACL;
                                        )

                                )

                        )

                    [17] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUPER_SYM
                                            [action] =>  Lex->grant |= SUPER_ACL;
                                        )

                                )

                        )

                    [18] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEMPORARY
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TABLES
                                            [action] =>  Lex->grant |= CREATE_TMP_ACL;
                                        )

                                )

                        )

                    [19] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => LOCK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLES
                                            [action] =>  Lex->grant |= LOCK_TABLES_ACL; 
                                        )

                                )

                        )

                    [20] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATION
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SLAVE
                                            [action] =>  Lex->grant |= REPL_SLAVE_ACL; 
                                        )

                                )

                        )

                    [21] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REPLICATION
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CLIENT_SYM
                                            [action] =>  Lex->grant |= REPL_CLIENT_ACL; 
                                        )

                                )

                        )

                    [22] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] =>  Lex->grant |= CREATE_VIEW_ACL; 
                                        )

                                )

                        )

                    [23] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SHOW
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] =>  Lex->grant |= SHOW_VIEW_ACL; 
                                        )

                                )

                        )

                    [24] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ROUTINE_SYM
                                            [action] =>  Lex->grant |= CREATE_PROC_ACL; 
                                        )

                                )

                        )

                    [25] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALTER
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ROUTINE_SYM
                                            [action] =>  Lex->grant |= ALTER_PROC_ACL; 
                                        )

                                )

                        )

                    [26] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => USER
                                            [action] =>  Lex->grant |= CREATE_USER_ACL; 
                                        )

                                )

                        )

                    [27] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => EVENT_SYM
                                            [action] =>  Lex->grant |= EVENT_ACL;
                                        )

                                )

                        )

                    [28] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIGGER_SYM
                                            [action] =>  Lex->grant |= TRIGGER_ACL; 
                                        )

                                )

                        )

                    [29] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CREATE
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TABLESPACE_SYM
                                            [action] =>  Lex->grant |= CREATE_TABLESPACE_ACL; 
                                        )

                                )

                        )

                )

        )

    [opt_and] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [require_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => require_list_element
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_and
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => require_list
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => require_list_element
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [require_list_element] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUBJECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=$2.str;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ISSUER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=$2.str;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CIPHER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=$2.str;
          
                                        )

                                )

                        )

                )

        )

    [grant_ident] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            LEX *lex= Lex;
            lex->current_select()->db = $1.str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => '.'
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '*'
                                            [action] => 
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, $1,NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          
                                        )

                                )

                        )

                )

        )

    [user_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
            if (Lex->users_list.push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
            if (Lex->users_list.push_back($3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [grant_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_user
                                            [action] => 
            if (Lex->users_list.push_back($1))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => grant_user
                                            [action] => 
            if (Lex->users_list.push_back($3))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [grant_user] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$=$1;
            $1->auth.str= $4.str;
            $1->auth.length= $4.length;
            $1->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => PASSWORD
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TEXT_STRING
                                            [action] => 
            $$= $1;
            $1->auth.str= $5.str;
            $1->auth.length= $5.length;
            $1->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
            $$= $1;
            $1->plugin.str= $4.str;
            $1->plugin.length= $4.length;
            $1->auth= EMPTY_CSTR;
            $1->uses_identified_with_clause= true;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            $$= $1;
            $1->plugin.str= $4.str;
            $1->plugin.length= $4.length;
            $1->auth.str= $6.str;
            $1->auth.length= $6.length;
            $1->uses_identified_with_clause= true;
            $1->uses_authentication_string_clause= true;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => IDENTIFIED_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => BY
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            $$= $1;
            $1->plugin.str= $4.str;
            $1->plugin.length= $4.length;
            $1->auth.str= $6.str;
            $1->auth.length= $6.length;
            $1->uses_identified_with_clause= true;
            $1->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => user
                                            [action] => 
            $$= $1;
            $1->auth= NULL_CSTR;
          
                                        )

                                )

                        )

                )

        )

    [opt_column_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => column_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [column_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => column_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => column_list_id
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => column_list_id
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [column_list_id] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            String *new_str = new (YYTHD->mem_root) String((const char*) $1.str,$1.length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          
                                        )

                                )

                        )

                )

        )

    [require_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REQUIRE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => require_list
                                            [action] => 
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REQUIRE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SSL_SYM
                                            [action] => 
            Lex->ssl_type=SSL_TYPE_ANY;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REQUIRE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => X509_SYM
                                            [action] => 
            Lex->ssl_type=SSL_TYPE_X509;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => REQUIRE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NONE_SYM
                                            [action] => 
            Lex->ssl_type=SSL_TYPE_NONE;
          
                                        )

                                )

                        )

                )

        )

    [grant_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => grant_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_grant_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => GRANT
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->grant |= GRANT_ACL;
                                        )

                                )

                        )

                )

        )

    [grant_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => grant_option
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => grant_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [grant_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => GRANT
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->grant |= GRANT_ACL;
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_QUERIES_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.questions=$2;
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_UPDATES_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.updates=$2;
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_CONNECTIONS_PER_HOUR
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= $2;
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => MAX_USER_CONNECTIONS_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            LEX *lex=Lex;
            lex->mqh.user_conn= $2;
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          
                                        )

                                )

                        )

                )

        )

    [begin] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEGIN_SYM
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_work
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_work] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WORK_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_chain] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= TVL_UNKNOWN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CHAIN_SYM
                                            [action] =>  $$= TVL_NO; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHAIN_SYM
                                            [action] =>  $$= TVL_YES; 
                                        )

                                )

                        )

                )

        )

    [opt_release] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= TVL_UNKNOWN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELEASE_SYM
                                            [action] =>  $$= TVL_YES; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => NO_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => RELEASE_SYM
                                            [action] =>  $$= TVL_NO; 
                                        )

                                )

                        )

                )

        )

    [opt_savepoint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SAVEPOINT_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [commit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => COMMIT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_work
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_chain
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_release
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS($3 != TVL_YES || $4 != TVL_YES);
            lex->tx_chain= $3;
            lex->tx_release= $4;
          
                                        )

                                )

                        )

                )

        )

    [rollback] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROLLBACK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_work
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_chain
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_release
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS($3 != TVL_YES || $4 != TVL_YES);
            lex->tx_chain= $3;
            lex->tx_release= $4;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ROLLBACK_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_work
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TO_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_savepoint
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= $5;
          
                                        )

                                )

                        )

                )

        )

    [savepoint] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SAVEPOINT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= $2;
          
                                        )

                                )

                        )

                )

        )

    [release] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RELEASE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SAVEPOINT_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= $3;
          
                                        )

                                )

                        )

                )

        )

    [opt_union_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => union_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [union_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => union_option
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => select_init
                                            [action] => 
            $$= NEW_PTN PT_union_list($2, $3);
          
                                        )

                                )

                        )

                )

        )

    [union_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => union_list
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => union_order_or_limit
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [opt_union_order_or_limit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= NULL; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => union_order_or_limit
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [union_order_or_limit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_or_limit
                                            [action] => 
            $$= NEW_PTN PT_union_order_or_limit($1);
          
                                        )

                                )

                        )

                )

        )

    [order_or_limit] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => order_clause
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_limit_clause
                                            [action] => 
            $$= NEW_PTN PT_order_or_limit_order($1, $2);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => limit_clause
                                            [action] =>  $$= $1; 
                                        )

                                )

                        )

                )

        )

    [union_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$=1; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] =>  $$=1; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] =>  $$=0; 
                                        )

                                )

                        )

                )

        )

    [query_specification] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_part2_derived
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_expression
                                            [action] => 
            $$= NEW_PTN PT_query_specification_select($1, $2, $3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_paren_derived
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_union_order_or_limit
                                            [action] => 
            $$= NEW_PTN PT_query_specification_parenthesis($2, $4);
          
                                        )

                                )

                        )

                )

        )

    [query_expression_body] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_specification
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_expression_body
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => UNION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => union_option
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => query_specification
                                            [action] => 
            $$= NEW_PTN PT_query_expression_body_union(@$, $1, $3, $4);
          
                                        )

                                )

                        )

                )

        )

    [subselect] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /*
              TODO: remove this semantic action (currently this removal
              adds reduce/reduce conflict)
            */
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => query_expression_body
                                            [action] => 
            $$= NEW_PTN PT_subselect(@$, $2);
          
                                        )

                                )

                        )

                )

        )

    [opt_query_spec_options] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= 0; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_spec_option_list
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [query_spec_option_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_spec_option_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => query_spec_option
                                            [action] => 
            $$= $1 | $2;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => query_spec_option
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [query_spec_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => STRAIGHT_JOIN
                                            [action] =>  $$= SELECT_STRAIGHT_JOIN; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => HIGH_PRIORITY
                                            [action] =>  $$= SELECT_HIGH_PRIORITY; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DISTINCT
                                            [action] =>  $$= SELECT_DISTINCT; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_SMALL_RESULT
                                            [action] =>  $$= SELECT_SMALL_RESULT; 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_BIG_RESULT
                                            [action] =>  $$= SELECT_BIG_RESULT; 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_BUFFER_RESULT
                                            [action] =>  $$= OPTION_BUFFER_RESULT; 
                                        )

                                )

                        )

                    [6] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_CALC_FOUND_ROWS
                                            [action] =>  $$= OPTION_FOUND_ROWS; 
                                        )

                                )

                        )

                    [7] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALL
                                            [action] =>  $$= SELECT_ALL; 
                                        )

                                )

                        )

                )

        )

    [view_or_trigger_or_sp_or_event] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => definer
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => definer_tail
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => no_definer
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => no_definer_tail
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_replace_or_algorithm
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => definer_opt
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => view_tail
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [definer_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_tail
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => trigger_tail
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_tail
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sf_tail
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => event_tail
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [no_definer_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_tail
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => trigger_tail
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sp_tail
                                            [action] => 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => sf_tail
                                            [action] => 
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => udf_tail
                                            [action] => 
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => event_tail
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [definer_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => no_definer
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => definer
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [no_definer] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          
                                        )

                                )

                        )

                )

        )

    [definer] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => DEFINER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => user
                                            [action] => 
            YYTHD->lex->definer= get_current_user(YYTHD, $3);
          
                                        )

                                )

                        )

                )

        )

    [view_replace_or_algorithm] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_replace
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_replace
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => view_algorithm
                                            [action] => 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_algorithm
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [view_replace] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => OR_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => REPLACE
                                            [action] =>  Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; 
                                        )

                                )

                        )

                )

        )

    [view_algorithm] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => UNDEFINED_SYM
                                            [action] =>  Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => MERGE_SYM
                                            [action] =>  Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ALGORITHM_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => EQ
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => TEMPTABLE_SYM
                                            [action] =>  Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; 
                                        )

                                )

                        )

                )

        )

    [view_suid] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->create_view_suid= VIEW_SUID_DEFAULT; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SECURITY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => DEFINER_SYM
                                            [action] =>  Lex->create_view_suid= VIEW_SUID_DEFINER; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SQL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => SECURITY_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => INVOKER_SYM
                                            [action] =>  Lex->create_view_suid= VIEW_SUID_INVOKER; 
                                        )

                                )

                        )

                )

        )

    [view_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_suid
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => VIEW_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, $3, NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => view_list_opt
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => AS
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => view_select
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [view_list_opt] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => view_list
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [view_list] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ident
                                            [action] => 
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&$1, sizeof(LEX_STRING)));
            
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => view_list
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&$3, sizeof(LEX_STRING)));
            
                                        )

                                )

                        )

                )

        )

    [view_select] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => view_select_aux
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => view_check_option
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>(@2.cpp.start);
            size_t len= @3.cpp.end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          
                                        )

                                )

                        )

                )

        )

    [view_select_aux] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => create_view_select
                                            [action] => 
            if (Lex->current_select()->set_braces(0))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "PT_select_init2::contextualize()) is not
              done here.
            */
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => opt_union_clause
                                            [action] => 
            if ($3 != NULL)
              CONTEXTUALIZE($3);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_view_select_paren
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => union_opt
                                            [action] => 
            if ($4 != NULL)
              CONTEXTUALIZE($4);
          
                                        )

                                )

                        )

                )

        )

    [create_view_select_paren] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
            Lex->current_select()->set_braces(true);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_view_select
                                            [action] => 
            if (setup_select_in_parentheses(Select))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => '('
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => create_view_select_paren
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ')'
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [create_view_select] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SELECT_SYM
                                            [action] => 
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          
                                        )

                                    [1] => Array
                                        (
                                            [id] => select_part2
                                            [action] => 
            CONTEXTUALIZE($3);

            Lex->current_select()->table_list.push_front(&Lex->save_list);
          
                                        )

                                )

                        )

                )

        )

    [view_check_option] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  Lex->create_view_check= VIEW_CHECK_NONE; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->create_view_check= VIEW_CHECK_CASCADED; 
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => CASCADED
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->create_view_check= VIEW_CHECK_CASCADED; 
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => WITH
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => LOCAL_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => CHECK_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => OPTION
                                            [action] =>  Lex->create_view_check= VIEW_CHECK_LOCAL; 
                                        )

                                )

                        )

                )

        )

    [trigger_action_order] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FOLLOWS_SYM
                                            [action] =>  $$= TRG_ORDER_FOLLOWS; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PRECEDES_SYM
                                            [action] =>  $$= TRG_ORDER_PRECEDES; 
                                        )

                                )

                        )

                )

        )

    [trigger_follows_precedes_clause] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] => 
              $$.ordering_clause= TRG_ORDER_NONE;
              $$.anchor_trigger_name.str= NULL;
              $$.anchor_trigger_name.length= 0;
            
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => trigger_action_order
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident_or_text
                                            [action] => 
              $$.ordering_clause= $1;
              $$.anchor_trigger_name= $2;
            
                                        )

                                )

                        )

                )

        )

    [trigger_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => TRIGGER_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => trg_action_time
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => trg_event
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ON
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => table_ident
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [7] => Array
                                        (
                                            [id] => EACH_SYM
                                            [action] => 
                                        )

                                    [8] => Array
                                        (
                                            [id] => ROW_SYM
                                            [action] => 
                                        )

                                    [9] => Array
                                        (
                                            [id] => trigger_follows_precedes_clause
                                            [action] =>                  /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= @5.raw.start;
            lex->raw_trg_on_table_name_end= @7.raw.start;

            if (@10.is_empty())
            {
              /*
                @10.is_empty() is true when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= @10.cpp.start;
              lex->trg_ordering_clause_end= @10.cpp.end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, $2);

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) $3;
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) $4;
            sp->m_trg_chistics.ordering_clause= $10.ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= $10.anchor_trigger_name;

            lex->stmt_definition_begin= @1.cpp.start;
            lex->ident.str= const_cast<char *>(@6.cpp.start);
            lex->ident.length= @8.cpp.start - @6.cpp.start;

            lex->sphead= sp;
            lex->spname= $2;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, @9.cpp.end);
          
                                        )

                                    [10] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] =>  /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, $6,
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          
                                        )

                                )

                        )

                )

        )

    [udf_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => AGGREGATE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => RETURNS_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => udf_type
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => SONAME_SYM
                                            [action] => 
                                        )

                                    [6] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & $3))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       $3.str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= @2.cpp.start;
            lex->udf.name = $3;
            lex->udf.returns=(Item_result) $5;
            lex->udf.dl=$7.str;
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => RETURNS_SYM
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => udf_type
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => SONAME_SYM
                                            [action] => 
                                        )

                                    [5] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & $2))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       $2.str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= @1.cpp.start;
            lex->udf.name = $2;
            lex->udf.returns=(Item_result) $4;
            lex->udf.dl=$6.str;
          
                                        )

                                )

                        )

                )

        )

    [sf_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => FUNCTION_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_name
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] =>  /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= @1.cpp.start;
            lex->spname= $2;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr(@3.cpp.end);
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_fdparam_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] =>  /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr(@6.cpp.start);
          
                                        )

                                    [5] => Array
                                        (
                                            [id] => RETURNS_SYM
                                            [action] =>  /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
            lex->gcol_info= 0;
          
                                        )

                                    [6] => Array
                                        (
                                            [id] => type_with_opt_collate
                                            [action] =>  /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (($10 == MYSQL_TYPE_STRING || $10 == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) $10,
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          
                                        )

                                    [7] => Array
                                        (
                                            [id] => sp_c_chistics
                                            [action] =>  /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          
                                        )

                                    [8] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] => 
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          
                                        )

                                )

                        )

                )

        )

    [sp_tail] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => PROCEDURE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => sp_name
                                            [action] =>                      /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= @2.cpp.start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, $2);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          
                                        )

                                    [2] => Array
                                        (
                                            [id] => '('
                                            [action] =>                      /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr(@4.cpp.end);
          
                                        )

                                    [3] => Array
                                        (
                                            [id] => sp_pdparam_list
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ')'
                                            [action] =>                      /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr(@7.cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          
                                        )

                                    [5] => Array
                                        (
                                            [id] => sp_c_chistics
                                            [action] =>                      /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          
                                        )

                                    [6] => Array
                                        (
                                            [id] => sp_proc_stmt
                                            [action] =>                      /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          
                                        )

                                )

                        )

                )

        )

    [xa] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => begin_or_start
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_join_or_resume
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_start($3, $4);
          
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => END
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_suspend
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_end($3, $4);
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PREPARE_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_prepare($3);
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => COMMIT_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => opt_one_phase
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_commit($3, $4);
          
                                        )

                                )

                        )

                    [4] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ROLLBACK_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_rollback($3);
          
                                        )

                                )

                        )

                    [5] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => XA_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => RECOVER_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => opt_convert_xid
                                            [action] => 
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_recover($3);
          
                                        )

                                )

                        )

                )

        )

    [opt_convert_xid] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= false; 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => CONVERT_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => XID_SYM
                                            [action] =>  $$= true; 
                                        )

                                    [2] => Array
                                        (
                                            [id] => xid:
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            MYSQL_YYABORT_UNLESS($1->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, $1->ptr(), $1->length(), 0, 0);
            $$= xid;
          
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
            MYSQL_YYABORT_UNLESS($1->length() <= MAXGTRIDSIZE &&
                                 $3->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, $1->ptr(), $1->length(), $3->ptr(), $3->length());
            $$= xid;
          
                                        )

                                )

                        )

                    [3] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => text_string
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => ','
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => ulong_num
                                            [action] => 
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ($5 > LONG_MAX);

            MYSQL_YYABORT_UNLESS($1->length() <= MAXGTRIDSIZE &&
                                 $3->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set($5, $1->ptr(), $1->length(), $3->ptr(), $3->length());
            $$= xid;
          
                                        )

                                )

                        )

                )

        )

    [begin_or_start] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => BEGIN_SYM
                                            [action] => 
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => START_SYM
                                            [action] => 
                                        )

                                )

                        )

                )

        )

    [opt_join_or_resume] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= XA_NONE;        
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => JOIN_SYM
                                            [action] =>  $$= XA_JOIN;        
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => RESUME_SYM
                                            [action] =>  $$= XA_RESUME;      
                                        )

                                )

                        )

                )

        )

    [opt_one_phase] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= XA_NONE;        
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => ONE_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PHASE_SYM
                                            [action] =>  $$= XA_ONE_PHASE;   
                                        )

                                )

                        )

                )

        )

    [opt_suspend] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => 
                                            [action] =>  $$= XA_NONE;        
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUSPEND_SYM
                                            [action] =>  $$= XA_SUSPEND;     
                                        )

                                )

                        )

                    [2] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => SUSPEND_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => FOR_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => MIGRATE_SYM
                                            [action] =>  $$= XA_FOR_MIGRATE; 
                                        )

                                )

                        )

                )

        )

    [install] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => INSTALL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PLUGIN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
                                        )

                                    [3] => Array
                                        (
                                            [id] => SONAME_SYM
                                            [action] => 
                                        )

                                    [4] => Array
                                        (
                                            [id] => TEXT_STRING_sys
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin($3, $5);
          
                                        )

                                )

                        )

                )

        )

    [uninstall] => Array
        (
            [components] => Array
                (
                    [0] => Array
                        (
                            [symbols] => Array
                                (
                                    [0] => Array
                                        (
                                            [id] => UNINSTALL_SYM
                                            [action] => 
                                        )

                                    [1] => Array
                                        (
                                            [id] => PLUGIN_SYM
                                            [action] => 
                                        )

                                    [2] => Array
                                        (
                                            [id] => ident
                                            [action] => 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin($3);
          
                                        )

                                )

                        )

                )

        )

)
